[{"path":"https://docs.ropensci.org/BaseSet/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) , Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://docs.ropensci.org/BaseSet/articles/BaseSet.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"BaseSet","text":"vignette explains work sets using package. package provides class store information efficiently functions work .","code":""},{"path":"https://docs.ropensci.org/BaseSet/articles/BaseSet.html","id":"the-tidyset-class","dir":"Articles","previous_headings":"","what":"The TidySet class","title":"BaseSet","text":"create TidySet object, store associations elements sets image several genes associated characteristic. stored internally three slots relations(), elements(), sets() slots. information element set can added: data stored one three slots, can directly accessed using getter methods: can add much information want, restriction “fuzzy” column relations(). See Fuzzy sets vignette: vignette(\"Fuzzy sets\", \"BaseSet\"). can also use standard R approach [: Observe one can add, replace delete","code":"library(\"BaseSet\") gene_lists <- list(     geneset1 = c(\"A\", \"B\"),     geneset2 = c(\"B\", \"C\", \"D\") ) tidy_set <- tidySet(gene_lists) tidy_set #>   elements     sets fuzzy #> 1        A geneset1     1 #> 2        B geneset1     1 #> 3        B geneset2     1 #> 4        C geneset2     1 #> 5        D geneset2     1 gene_data <- data.frame(     stat1     = c( 1,   2,   3,   4 ),     info1     = c(\"a\", \"b\", \"c\", \"d\") )  tidy_set <- add_column(tidy_set, \"elements\", gene_data) set_data <- data.frame(     Group     = c( 100 ,  200 ),     Column     = c(\"abc\", \"def\") ) tidy_set <- add_column(tidy_set, \"sets\", set_data) tidy_set #>   elements     sets fuzzy Group Column stat1 info1 #> 1        A geneset1     1   100    abc     1     a #> 2        B geneset1     1   100    abc     2     b #> 3        B geneset2     1   200    def     2     b #> 4        C geneset2     1   200    def     3     c #> 5        D geneset2     1   200    def     4     d relations(tidy_set) #>   elements     sets fuzzy #> 1        A geneset1     1 #> 2        B geneset1     1 #> 3        B geneset2     1 #> 4        C geneset2     1 #> 5        D geneset2     1 elements(tidy_set) #>   elements stat1 info1 #> 1        A     1     a #> 2        B     2     b #> 3        C     3     c #> 4        D     4     d sets(tidy_set) #>       sets Group Column #> 1 geneset1   100    abc #> 2 geneset2   200    def gene_data <- data.frame(     stat2     = c( 4,   4,   3,   5 ),     info2     = c(\"a\", \"b\", \"c\", \"d\") )  tidy_set$info1 <- NULL tidy_set[, \"elements\", c(\"stat2\", \"info2\")] <- gene_data tidy_set[, \"sets\", \"Group\"] <- c(\"low\", \"high\") tidy_set #>   elements     sets fuzzy Group Column stat1 stat2 info2 #> 1        A geneset1     1   low    abc     1     4     a #> 2        B geneset1     1   low    abc     2     4     b #> 3        B geneset2     1  high    def     2     4     b #> 4        C geneset2     1  high    def     3     3     c #> 5        D geneset2     1  high    def     4     5     d"},{"path":"https://docs.ropensci.org/BaseSet/articles/BaseSet.html","id":"creating-a-tidyset","dir":"Articles","previous_headings":"","what":"Creating a TidySet","title":"BaseSet","text":"can see possible create TidySet list. commonly can create data.frame: also possible matrix: can created GeneSet GeneSetCollection objects. Additionally several function read files related sets like OBO files (getOBO) GAF (getGAF)","code":"relations <- data.frame(elements = c(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"),                          sets = c(\"A\", \"A\", \"A\", \"A\", \"A\", \"B\"),                          fuzzy = c(1, 1, 1, 1, 1, 1)) TS <- tidySet(relations) TS #>   elements sets fuzzy #> 1        a    A     1 #> 2        b    A     1 #> 3        c    A     1 #> 4        d    A     1 #> 5        e    A     1 #> 6        f    B     1 m <- matrix(c(0, 0, 1, 1, 1, 1, 0, 1, 0), ncol = 3, nrow = 3,                  dimnames = list(letters[1:3], LETTERS[1:3])) m #>   A B C #> a 0 1 0 #> b 0 1 1 #> c 1 1 0 tidy_set <- tidySet(m) tidy_set #>   elements sets fuzzy #> 1        c    A     1 #> 2        a    B     1 #> 3        b    B     1 #> 4        c    B     1 #> 5        b    C     1"},{"path":"https://docs.ropensci.org/BaseSet/articles/BaseSet.html","id":"converting-to-other-formats","dir":"Articles","previous_headings":"","what":"Converting to other formats","title":"BaseSet","text":"possible extract gene sets list, use functions lapply. need apply network methods need matrix, can create incidence:","code":"as.list(tidy_set) #> $A #> c  #> 1  #>  #> $B #> a b c  #> 1 1 1  #>  #> $C #> b  #> 1 incidence(tidy_set) #>   A B C #> c 1 1 0 #> a 0 1 0 #> b 0 1 1"},{"path":"https://docs.ropensci.org/BaseSet/articles/BaseSet.html","id":"operations-with-sets","dir":"Articles","previous_headings":"","what":"Operations with sets","title":"BaseSet","text":"work sets several methods provided. general can provide new name resulting set operation, don’t one automatically provided using naming(). methods work fuzzy non-fuzzy sets","code":""},{"path":"https://docs.ropensci.org/BaseSet/articles/BaseSet.html","id":"union","dir":"Articles","previous_headings":"Operations with sets","what":"Union","title":"BaseSet","text":"can make union two sets present object.","code":"BaseSet::union(tidy_set, sets = c(\"C\", \"B\"), name = \"D\") #>   elements sets fuzzy #> 1        a    D     1 #> 2        b    D     1 #> 3        c    D     1"},{"path":"https://docs.ropensci.org/BaseSet/articles/BaseSet.html","id":"intersection","dir":"Articles","previous_headings":"Operations with sets","what":"Intersection","title":"BaseSet","text":"keep argument used want keep previous sets:","code":"intersection(tidy_set, sets = c(\"A\", \"B\"), name = \"D\", keep = TRUE) #>   elements sets fuzzy #> 1        c    A     1 #> 2        a    B     1 #> 3        b    B     1 #> 4        c    B     1 #> 5        b    C     1 #> 6        c    D     1 intersection(tidy_set, sets = c(\"A\", \"B\"), name = \"D\", keep = FALSE) #>   elements sets fuzzy #> 1        c    D     1"},{"path":"https://docs.ropensci.org/BaseSet/articles/BaseSet.html","id":"complement","dir":"Articles","previous_headings":"Operations with sets","what":"Complement","title":"BaseSet","text":"can look complement one several sets: Observe haven’t provided name resulting set can provide one prefer ","code":"complement_set(tidy_set, sets = c(\"A\", \"B\")) #>   elements sets fuzzy #> 1        c    A     1 #> 2        a    B     1 #> 3        b    B     1 #> 4        c    B     1 #> 5        b    C     1 #> 6        c ∁A∪B     0 #> 7        a ∁A∪B     0 #> 8        b ∁A∪B     0 complement_set(tidy_set, sets = c(\"A\", \"B\"), name = \"F\") #>   elements sets fuzzy #> 1        c    A     1 #> 2        a    B     1 #> 3        b    B     1 #> 4        c    B     1 #> 5        b    C     1 #> 6        c    F     0 #> 7        a    F     0 #> 8        b    F     0"},{"path":"https://docs.ropensci.org/BaseSet/articles/BaseSet.html","id":"subtract","dir":"Articles","previous_headings":"Operations with sets","what":"Subtract","title":"BaseSet","text":"equivalent setdiff, clearer: See first case isn’t element present B set , new set stored. second use case focus just elements present B .","code":"out <- subtract(tidy_set, set_in = \"A\", not_in = \"B\", name = \"A-B\") out #>   elements sets fuzzy #> 1        c    A     1 #> 2        a    B     1 #> 3        b    B     1 #> 4        c    B     1 #> 5        b    C     1 name_sets(out) #> [1] \"A\"   \"B\"   \"C\"   \"A-B\" subtract(tidy_set, set_in = \"B\", not_in = \"A\", keep = FALSE) #>   elements sets fuzzy #> 1        a  B∖A     1 #> 2        b  B∖A     1"},{"path":"https://docs.ropensci.org/BaseSet/articles/BaseSet.html","id":"additional-information","dir":"Articles","previous_headings":"","what":"Additional information","title":"BaseSet","text":"number unique elements sets can obtained using nElements() nSets() methods. wish know single call can use dim(tidy_set): 3, 5, 3. summary doesn’t provide number relations set. can quickly obtain lengths(tidy_set): 1, 3, 1 size set can obtained using set_size() method. Conversely, number sets associated gene returned element_size() function. identifiers elements sets can inspected renamed using name_elements ","code":"nElements(tidy_set) #> [1] 3 nSets(tidy_set) #> [1] 3 nRelations(tidy_set) #> [1] 5 set_size(tidy_set) #>   sets size probability #> 1    A    1           1 #> 2    B    3           1 #> 3    C    1           1 element_size(tidy_set) #>   elements size probability #> 1        c    2           1 #> 2        a    1           1 #> 3        b    2           1 name_elements(tidy_set) #> [1] \"c\" \"a\" \"b\" name_elements(tidy_set) <- paste0(\"Gene\", seq_len(nElements(tidy_set))) name_elements(tidy_set) #> [1] \"Gene1\" \"Gene2\" \"Gene3\" name_sets(tidy_set) #> [1] \"A\" \"B\" \"C\" name_sets(tidy_set) <- paste0(\"Geneset\", seq_len(nSets(tidy_set))) name_sets(tidy_set) #> [1] \"Geneset1\" \"Geneset2\" \"Geneset3\""},{"path":"https://docs.ropensci.org/BaseSet/articles/BaseSet.html","id":"using-dplyr-verbs","dir":"Articles","previous_headings":"","what":"Using dplyr verbs","title":"BaseSet","text":"can also use mutate(), filter(), select(), group_by() dplyr verbs TidySets. usually need activate three slots want affect activate(): can use activate select verbs modifying: think need group_by usually mean need new set. can create new one group. can use group_by() won’t return TidySet. grouping mutating sometimes might interested moving column describing something places. can :","code":"library(\"dplyr\") #>  #> Attaching package: 'dplyr' #> The following object is masked from 'package:BaseSet': #>  #>     union #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union m_TS <- tidy_set %>%    activate(\"relations\") %>%    mutate(Important = runif(nRelations(tidy_set))) m_TS #>   elements     sets fuzzy   Important #> 1    Gene1 Geneset1     1 0.080750138 #> 2    Gene2 Geneset2     1 0.834333037 #> 3    Gene3 Geneset2     1 0.600760886 #> 4    Gene1 Geneset2     1 0.157208442 #> 5    Gene3 Geneset3     1 0.007399441 set_modified <- m_TS %>%    activate(\"elements\") %>%    mutate(Pathway = if_else(elements %in% c(\"Gene1\", \"Gene2\"),                             \"pathway1\",                             \"pathway2\")) set_modified #>   elements     sets fuzzy   Important  Pathway #> 1    Gene1 Geneset1     1 0.080750138 pathway1 #> 2    Gene2 Geneset2     1 0.834333037 pathway1 #> 3    Gene3 Geneset2     1 0.600760886 pathway2 #> 4    Gene1 Geneset2     1 0.157208442 pathway1 #> 5    Gene3 Geneset3     1 0.007399441 pathway2 set_modified %>%    deactivate() %>% # To apply a filter independently of where it is   filter(Pathway == \"pathway1\") #>   elements     sets fuzzy  Important  Pathway #> 1    Gene1 Geneset1     1 0.08075014 pathway1 #> 2    Gene2 Geneset2     1 0.83433304 pathway1 #> 3    Gene1 Geneset2     1 0.15720844 pathway1 # A new group of those elements in pathway1 and with Important == 1 set_modified %>%    deactivate() %>%    group(name = \"new\", Pathway == \"pathway1\") #>   elements     sets fuzzy   Important  Pathway #> 1    Gene1 Geneset1     1 0.080750138 pathway1 #> 2    Gene2 Geneset2     1 0.834333037 pathway1 #> 3    Gene3 Geneset2     1 0.600760886 pathway2 #> 4    Gene1 Geneset2     1 0.157208442 pathway1 #> 5    Gene3 Geneset3     1 0.007399441 pathway2 #> 6    Gene1      new     1          NA pathway1 #> 7    Gene2      new     1          NA pathway1 set_modified %>%    group(\"pathway1\", elements %in% c(\"Gene1\", \"Gene2\")) #>   elements     sets fuzzy   Important  Pathway #> 1    Gene1 Geneset1     1 0.080750138 pathway1 #> 2    Gene2 Geneset2     1 0.834333037 pathway1 #> 3    Gene3 Geneset2     1 0.600760886 pathway2 #> 4    Gene1 Geneset2     1 0.157208442 pathway1 #> 5    Gene3 Geneset3     1 0.007399441 pathway2 #> 6    Gene1 pathway1     1          NA pathway1 #> 7    Gene2 pathway1     1          NA pathway1 set_modified %>%      deactivate() %>%      group_by(Pathway, sets) %>%       count() #> # A tibble: 4 × 3 #> # Groups:   Pathway, sets [4] #>   Pathway  sets         n #>   <chr>    <chr>    <int> #> 1 pathway1 Geneset1     1 #> 2 pathway1 Geneset2     2 #> 3 pathway2 Geneset2     1 #> 4 pathway2 Geneset3     1 elements(set_modified) #>   elements  Pathway #> 1    Gene1 pathway1 #> 2    Gene2 pathway1 #> 3    Gene3 pathway2 out <- move_to(set_modified, \"elements\", \"relations\", \"Pathway\") relations(out) #>   elements     sets fuzzy   Important  Pathway #> 1    Gene1 Geneset1     1 0.080750138 pathway1 #> 2    Gene2 Geneset2     1 0.834333037 pathway1 #> 3    Gene3 Geneset2     1 0.600760886 pathway2 #> 4    Gene1 Geneset2     1 0.157208442 pathway1 #> 5    Gene3 Geneset3     1 0.007399441 pathway2"},{"path":"https://docs.ropensci.org/BaseSet/articles/BaseSet.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"BaseSet","text":"","code":"#> R version 4.4.2 (2024-10-31) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 24.04.1 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4   BaseSet_1.0.0 #>  #> loaded via a namespace (and not attached): #>  [1] vctrs_0.6.5       cli_3.6.4         knitr_1.49        rlang_1.1.5       #>  [5] xfun_0.50         generics_0.1.3    textshaping_1.0.0 jsonlite_1.8.9    #>  [9] glue_1.8.0        htmltools_0.5.8.1 ragg_1.3.3        sass_0.4.9        #> [13] rmarkdown_2.29    tibble_3.2.1      evaluate_1.0.3    jquerylib_0.1.4   #> [17] fastmap_1.2.0     yaml_2.3.10       lifecycle_1.0.4   compiler_4.4.2    #> [21] fs_1.6.5          pkgconfig_2.0.3   systemfonts_1.2.1 digest_0.6.37     #> [25] R6_2.6.1          utf8_1.2.4        tidyselect_1.2.1  pillar_1.10.1     #> [29] magrittr_2.0.3    bslib_0.9.0       tools_4.4.2       pkgdown_2.1.1     #> [33] cachem_1.1.0      desc_1.4.3"},{"path":"https://docs.ropensci.org/BaseSet/articles/advanced.html","id":"initial-setup","dir":"Articles","previous_headings":"","what":"Initial setup","title":"Advanced examples","text":"show compatibility tidy workflows use magrittr pipe operator dplyr verbs.","code":"library(\"BaseSet\", quietly = TRUE) library(\"dplyr\", quietly = TRUE)"},{"path":"https://docs.ropensci.org/BaseSet/articles/advanced.html","id":"human-gene-ontology","dir":"Articles","previous_headings":"","what":"Human gene ontology","title":"Advanced examples","text":"explore genes assigned gene ontology terms. terms describe process role genes. links annotated different evidence codes indicate annotation supported. can now explore differences evidence usage ontology gene ontology:  can see biological process likely defined IMP evidence code means inferred mutant phenotype. inferred physical interaction (IPI) almost exclusively used assign molecular functions. graph doesn’t consider relationships better annotated :  can see mostly annotations done single evidence code. far explored code related gene many genes don’t annotation? can see genes without annotation gene ontology terms without (direct) gene annotated.   can see second plot large values associated many genes:","code":"# We load some libraries library(\"org.Hs.eg.db\", quietly = TRUE) library(\"GO.db\", quietly = TRUE) library(\"ggplot2\", quietly = TRUE) # Prepare the data  h2GO_TS <- tidySet(org.Hs.egGO) h2GO <- as.data.frame(org.Hs.egGO) library(\"forcats\", include.only = \"fct_reorder2\", quietly = TRUE) h2GO %>%      group_by(Evidence, Ontology) %>%      count(name = \"Freq\") %>%      ungroup() %>%      mutate(Evidence = fct_reorder2(Evidence, Ontology, -Freq),            Ontology = case_match(Ontology,                                  \"CC\" ~ \"Cellular Component\",                                  \"MF\" ~ \"Molecular Function\",                                  \"BP\" ~ \"Biological Process\",                                  .default = NA)) %>%      ggplot() +     geom_col(aes(Evidence, Freq)) +     facet_grid(~Ontology) +      theme_minimal() +     coord_flip() +     labs(x = element_blank(), y = element_blank(),          title = \"Evidence codes for each ontology\") h2GO_TS %>%      relations() %>%      group_by(elements, sets) %>%      count(sort = TRUE, name = \"Annotations\") %>%      ungroup() %>%      count(Annotations, sort = TRUE) %>%      ggplot() +     geom_col(aes(Annotations, n)) +     theme_minimal() +     labs(x = \"Evidence codes\", y = \"Annotations\",           title = \"Evidence codes for each annotation\",          subtitle = \"in human\") +     scale_x_continuous(breaks = 1:7) # Add all the genes and GO terms h2GO_TS <- add_elements(h2GO_TS, keys(org.Hs.eg.db)) %>%      add_sets(grep(\"^GO:\", keys(GO.db), value = TRUE))  sizes_element <- element_size(h2GO_TS) %>%      arrange(desc(size)) sum(sizes_element$size == 0) #> [1] 172480 sum(sizes_element$size != 0) #> [1] 20825  sizes_set <- set_size(h2GO_TS) %>%      arrange(desc(size)) sum(sizes_set$size == 0) #> [1] 22261 sum(sizes_set$size != 0) #> [1] 18678 sizes_element %>%      filter(size != 0) %>%      ggplot() +     geom_histogram(aes(size), binwidth = 1) +     theme_minimal() +     labs(x = \"# sets per element\", y = \"Count\") sizes_set %>%      filter(size != 0) %>%      ggplot() +     geom_histogram(aes(size), binwidth = 1) +     theme_minimal() +     labs(x = \"# elements per set\", y = \"Count\") head(sizes_set, 10) #>          sets  size probability Ontology #> 1  GO:0005515 13668           1       MF #> 2  GO:0005634  5736           1       CC #> 3  GO:0005829  5468           1       CC #> 4  GO:0005886  5286           1       CC #> 5  GO:0005737  5253           1       CC #> 6  GO:0005654  3933           1       CC #> 7  GO:0016020  3272           1       CC #> 8  GO:0046872  2400           1       MF #> 9  GO:0070062  2213           1       CC #> 10 GO:0005576  1995           1       CC"},{"path":"https://docs.ropensci.org/BaseSet/articles/advanced.html","id":"using-fuzzy-values","dir":"Articles","previous_headings":"Human gene ontology","what":"Using fuzzy values","title":"Advanced examples","text":"radically change used fuzzy values. assign fuzzy value evidence code given lowest fuzzy value IEA (Inferred Electronic Annotation) evidence. highest values evidence codes coming experiments alike. several evidence codes ontology, result different fuzzy values relation. Instead, extract add new sets elements add extra column classify elements: Now can see gene ontologies supported evidence: Surprisingly supported terms protein binding, nucleus cytosol. expect top three terms cellular component, biological function molecular function. Calculating set sizes interesting requires computing big number combinations make last long require many memory available. Unexpectedly evidence main terms: fact terms arbitrarily decided inferred electronic analysis.","code":"nr <- h2GO_TS %>%      relations() %>%      dplyr::select(sets, Evidence) %>%      distinct() %>%      mutate(fuzzy = case_match(Evidence,                               \"EXP\" ~ 0.9,                               \"IDA\" ~ 0.8,                               \"IPI\" ~ 0.8,                               \"IMP\" ~ 0.75,                               \"IGI\" ~ 0.7,                               \"IEP\" ~ 0.65,                               \"HEP\" ~ 0.6,                               \"HDA\" ~ 0.6,                               \"HMP\" ~ 0.5,                               \"IBA\" ~ 0.45,                               \"ISS\" ~ 0.4,                               \"ISO\" ~ 0.32,                               \"ISA\" ~ 0.32,                               \"ISM\" ~ 0.3,                               \"RCA\" ~ 0.2,                               \"TAS\" ~ 0.15,                               \"NAS\" ~ 0.1,                               \"IC\" ~ 0.02,                               \"ND\" ~ 0.02,                               \"IEA\" ~ 0.01,                               .default = 0.01)) %>%      dplyr::select(sets = \"sets\", elements = \"Evidence\", fuzzy = fuzzy) ts <- h2GO_TS %>%      relations() %>%      dplyr::select(-Evidence) %>%      rbind(nr) %>%      tidySet() %>%      mutate_element(Type = ifelse(grepl(\"^[0-9]+$\", elements), \"gene\", \"evidence\")) ts %>%      dplyr::filter(Type != \"Gene\") %>%      cardinality() %>%      arrange(desc(cardinality)) %>%      head() #>         sets cardinality #> 1 GO:0005515    13670.90 #> 2 GO:0005634     5742.00 #> 3 GO:0005829     5472.78 #> 4 GO:0005886     5291.60 #> 5 GO:0005737     5258.10 #> 6 GO:0005654     3936.26 ts %>%      filter(sets %in% c(\"GO:0008152\", \"GO:0003674\", \"GO:0005575\"),            Type != \"gene\") %>%      set_size() #>         sets size probability #> 1 GO:0003674    0        0.98 #> 2 GO:0003674    1        0.02 #> 3 GO:0005575    0        0.98 #> 4 GO:0005575    1        0.02 go_terms <- c(\"GO:0008152\", \"GO:0003674\", \"GO:0005575\") ts %>%      filter(sets %in% go_terms & Type != \"gene\")  #>   elements       sets fuzzy     Type #> 1       ND GO:0005575  0.02 evidence #> 2       ND GO:0003674  0.02 evidence"},{"path":"https://docs.ropensci.org/BaseSet/articles/advanced.html","id":"human-pathways","dir":"Articles","previous_headings":"","what":"Human pathways","title":"Advanced examples","text":"Now repeat analysis pathways: Now everything ready can start measuring things… can see genes without pathways genes pathways.   can see second plot large values associated many genes:","code":"# We load some libraries library(\"reactome.db\")  # Prepare the data (is easier, there isn't any ontoogy or evidence column) h2p <- as.data.frame(reactomeEXTID2PATHID) colnames(h2p) <- c(\"sets\", \"elements\") # Filter only for human pathways h2p <- h2p[grepl(\"^R-HSA-\", h2p$sets), ]  # There are duplicate relations with different evidence codes!!:  summary(duplicated(h2p[, c(\"elements\", \"sets\")])) #>    Mode   FALSE    TRUE  #> logical  131256   14794 h2p <- unique(h2p) # Create a TidySet and  h2p_TS <- tidySet(h2p) %>%      # Add all the genes      add_elements(keys(org.Hs.eg.db)) sizes_element <- element_size(h2p_TS) %>%      arrange(desc(size)) sum(sizes_element$size == 0) #> [1] 182159 sum(sizes_element$size != 0) #> [1] 11422  sizes_set <- set_size(h2p_TS) %>%      arrange(desc(size)) sizes_element %>%      filter(size != 0) %>%      ggplot() +     geom_histogram(aes(size), binwidth = 1) +     scale_y_log10() +     theme_minimal() +     labs(x = \"# sets per element\", y = \"Count\") #> Warning in scale_y_log10(): log-10 transformation introduced #> infinite values. #> Warning: Removed 284 rows containing missing values or values outside the scale range #> (`geom_bar()`). sizes_set %>%      ggplot() +     geom_histogram(aes(size), binwidth = 1) +     scale_y_log10() +     theme_minimal() +     labs(x = \"# elements per set\", y = \"Count\") #> Warning in scale_y_log10(): log-10 transformation introduced #> infinite values. #> Warning: Removed 2358 rows containing missing values or values outside the scale range #> (`geom_bar()`). head(sizes_set, 10) #>             sets size probability #> 1   R-HSA-162582 2613           1 #> 2  R-HSA-1430728 2189           1 #> 3   R-HSA-392499 2087           1 #> 4  R-HSA-1643685 2080           1 #> 5   R-HSA-168256 2068           1 #> 6    R-HSA-74160 1569           1 #> 7   R-HSA-597592 1474           1 #> 8  R-HSA-1266738 1409           1 #> 9    R-HSA-73857 1373           1 #> 10 R-HSA-5663205 1273           1"},{"path":"https://docs.ropensci.org/BaseSet/articles/advanced.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Advanced examples","text":"","code":"#> R version 4.4.2 (2024-10-31) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 24.04.1 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] reactome.db_1.89.0   forcats_1.0.0        ggplot2_3.5.1        #>  [4] GO.db_3.20.0         org.Hs.eg.db_3.20.0  AnnotationDbi_1.68.0 #>  [7] IRanges_2.40.1       S4Vectors_0.44.0     Biobase_2.66.0       #> [10] BiocGenerics_0.52.0  dplyr_1.1.4          BaseSet_1.0.0        #>  #> loaded via a namespace (and not attached): #>  [1] KEGGREST_1.46.0         gtable_0.3.6            xfun_0.50               #>  [4] bslib_0.9.0             vctrs_0.6.5             tools_4.4.2             #>  [7] generics_0.1.3          tibble_3.2.1            RSQLite_2.3.9           #> [10] blob_1.2.4              pkgconfig_2.0.3         desc_1.4.3              #> [13] graph_1.84.1            lifecycle_1.0.4         GenomeInfoDbData_1.2.13 #> [16] farver_2.1.2            compiler_4.4.2          textshaping_1.0.0       #> [19] Biostrings_2.74.1       munsell_0.5.1           GenomeInfoDb_1.42.3     #> [22] htmltools_0.5.8.1       sass_0.4.9              yaml_2.3.10             #> [25] pkgdown_2.1.1           pillar_1.10.1           crayon_1.5.3            #> [28] jquerylib_0.1.4         cachem_1.1.0            tidyselect_1.2.1        #> [31] digest_0.6.37           labeling_0.4.3          fastmap_1.2.0           #> [34] grid_4.4.2              colorspace_2.1-1        cli_3.6.4               #> [37] magrittr_2.0.3          XML_3.99-0.18           GSEABase_1.68.0         #> [40] withr_3.0.2             UCSC.utils_1.2.0        scales_1.3.0            #> [43] bit64_4.6.0-1           rmarkdown_2.29          XVector_0.46.0          #> [46] httr_1.4.7              bit_4.5.0.1             ragg_1.3.3              #> [49] png_0.1-8               memoise_2.0.1           evaluate_1.0.3          #> [52] knitr_1.49              rlang_1.1.5             xtable_1.8-4            #> [55] glue_1.8.0              DBI_1.2.3               annotate_1.84.0         #> [58] jsonlite_1.8.9          R6_2.6.1                systemfonts_1.2.1       #> [61] fs_1.6.5                zlibbioc_1.52.0"},{"path":"https://docs.ropensci.org/BaseSet/articles/fuzzy.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"Fuzzy sets","text":"vignettes supposes already read “BaseSet” vignette. vignette explains fuzzy sets use . methods “normal” sets available fuzzy sets vignette focuses create, use .","code":""},{"path":"https://docs.ropensci.org/BaseSet/articles/fuzzy.html","id":"what-are-fuzzy-sets-and-whywhen-use-them","dir":"Articles","previous_headings":"","what":"What are fuzzy sets and why/when use them ?","title":"Fuzzy sets","text":"Fuzzy sets generalizations classical sets vagueness, one doesn’t know sure something relationship set element. vagueness can assignment set /membership set. One way vagueness arise classifying continuous scale categorical scale, example: temperature 20ºC hot ? temperature drops 15ºC warm? switch happen warm hot? fuzzy set theories step continuous scale categorical scale performed membership function called fuzzification. degree membership uncertainty membership considered type-2 fuzzy set. can understand using example paddle ball, can used tennis paddle (membership), don’t test bouncing court won’t sure (assignment) paddle ball tennis ball. think ball equally good tennis paddle (membership) two people thought tennis paddle. voting/rating system also common scenario fuzzy sets arise. several graders/people need agree compromise middle ground. One modern example ratting apps several people vote 1 5 app displayed value takes consideration votes. can see one vagueness uncertainty fuzzy logic good choice. developed several logic methods.","code":""},{"path":"https://docs.ropensci.org/BaseSet/articles/fuzzy.html","id":"creating-a-fuzzy-set","dir":"Articles","previous_headings":"","what":"Creating a fuzzy set","title":"Fuzzy sets","text":"create fuzzy set need column named “fuzzy” create data.frame named numeric vector create list. values restricted numeric value 0 1. value indicates strength, membership, truth value (probability) relationship element set.","code":"set.seed(4567) # To be able to have exact replicates relations <- data.frame(sets = c(rep(\"A\", 5), \"B\", \"C\"),                         elements = c(letters[seq_len(6)], letters[6]),                         fuzzy = runif(7)) fuzzy_set <- tidySet(relations)"},{"path":"https://docs.ropensci.org/BaseSet/articles/fuzzy.html","id":"working-with-fuzzy-sets","dir":"Articles","previous_headings":"","what":"Working with fuzzy sets","title":"Fuzzy sets","text":"can work fuzzy sets normal sets. remember end previous vignette used Important column, now already included fuzzy. allows us use information union intersection methods operations:","code":""},{"path":"https://docs.ropensci.org/BaseSet/articles/fuzzy.html","id":"union","dir":"Articles","previous_headings":"Working with fuzzy sets","what":"Union","title":"Fuzzy sets","text":"can make union two sets present object. get new set elements sets. isn’t element sets B, fuzzy values change. wanted use logic can provide FUN argument. several logic see instance ?sets::fuzzy_logic. pick operators fit framework data. Make sure defaults arguments logic apply data obtaining process.","code":"BaseSet::union(fuzzy_set, sets = c(\"A\", \"B\")) #>   elements sets     fuzzy #> 1        a  A∪B 0.2309186 #> 2        b  A∪B 0.7412554 #> 3        c  A∪B 0.1833834 #> 4        d  A∪B 0.4221682 #> 5        e  A∪B 0.5996399 #> 6        f  A∪B 0.2773313 BaseSet::union(fuzzy_set, sets = c(\"A\", \"B\"), name = \"D\") #>   elements sets     fuzzy #> 1        a    D 0.2309186 #> 2        b    D 0.7412554 #> 3        c    D 0.1833834 #> 4        d    D 0.4221682 #> 5        e    D 0.5996399 #> 6        f    D 0.2773313 BaseSet::union(fuzzy_set, sets = c(\"A\", \"B\"), FUN = function(x){sqrt(sum(x))}) #>   elements sets     fuzzy #> 1        a  A∪B 0.4805399 #> 2        b  A∪B 0.8609619 #> 3        c  A∪B 0.4282329 #> 4        d  A∪B 0.6497448 #> 5        e  A∪B 0.7743642 #> 6        f  A∪B 0.5266226"},{"path":"https://docs.ropensci.org/BaseSet/articles/fuzzy.html","id":"intersection","dir":"Articles","previous_headings":"Working with fuzzy sets","what":"Intersection","title":"Fuzzy sets","text":"However intersection B C can see changes fuzzy value: Different logic union(), intersection(), complement(), cardinality(), get different fuzzy values. Depending nature fuzziness intended goal might apply one rules.","code":"intersection(fuzzy_set, sets = c(\"B\", \"C\"), keep = FALSE) #>   elements sets     fuzzy #> 1        f  B∩C 0.2773313 intersection(fuzzy_set, sets = c(\"B\", \"C\"), keep = FALSE, FUN = \"mean\") #>   elements sets     fuzzy #> 1        f  B∩C 0.5040313"},{"path":"https://docs.ropensci.org/BaseSet/articles/fuzzy.html","id":"complement","dir":"Articles","previous_headings":"Working with fuzzy sets","what":"Complement","title":"Fuzzy sets","text":"can look complement one several sets: Note values complement 1-fuzzy can changed:","code":"complement_set(fuzzy_set, sets = \"A\", keep = FALSE) #>   elements sets     fuzzy #> 1        a   ∁A 0.7690814 #> 2        b   ∁A 0.2587446 #> 3        c   ∁A 0.8166166 #> 4        d   ∁A 0.5778318 #> 5        e   ∁A 0.4003601 filter(fuzzy_set, sets == \"A\") #>   elements sets     fuzzy #> 1        a    A 0.2309186 #> 2        b    A 0.7412554 #> 3        c    A 0.1833834 #> 4        d    A 0.4221682 #> 5        e    A 0.5996399 complement_set(fuzzy_set, sets = \"A\", keep = FALSE, FUN = function(x){1-x^2}) #>   elements sets     fuzzy #> 1        a   ∁A 0.9466766 #> 2        b   ∁A 0.4505405 #> 3        c   ∁A 0.9663705 #> 4        d   ∁A 0.8217740 #> 5        e   ∁A 0.6404320"},{"path":"https://docs.ropensci.org/BaseSet/articles/fuzzy.html","id":"subtract","dir":"Articles","previous_headings":"Working with fuzzy sets","what":"Subtract","title":"Fuzzy sets","text":"equivalent setdiff, clearer: Note also subtraction fuzzy value.","code":"subtract(fuzzy_set, set_in = \"A\", not_in = \"B\", keep = FALSE, name = \"A-B\") #>   elements sets     fuzzy #> 1        a  A-B 0.2309186 #> 2        b  A-B 0.7412554 #> 3        c  A-B 0.1833834 #> 4        d  A-B 0.4221682 #> 5        e  A-B 0.5996399 # Or the opposite B-A, but using the default name: subtract(fuzzy_set, set_in = \"B\", not_in = \"A\", keep = FALSE) #>   elements sets     fuzzy #> 1        f  B∖A 0.2773313"},{"path":"https://docs.ropensci.org/BaseSet/articles/fuzzy.html","id":"sizes","dir":"Articles","previous_headings":"","what":"Sizes","title":"Fuzzy sets","text":"consider fuzzy values probabilities size set fixed. calculate size given set set_size(): element can 0 sets: example can see probable element “” present element “f” present one set.","code":"set_size(fuzzy_set) #>    sets size probability #> 1     A    0 0.037593610 #> 2     A    1 0.211200558 #> 3     A    2 0.384150899 #> 4     A    3 0.278302802 #> 5     A    4 0.080805868 #> 6     A    5 0.007946263 #> 7     B    0 0.722668660 #> 8     B    1 0.277331340 #> 9     C    0 0.269268826 #> 10    C    1 0.730731174 element_size(fuzzy_set) #>    elements size probability #> 1         a    0   0.7690814 #> 2         a    1   0.2309186 #> 3         b    0   0.2587446 #> 4         b    1   0.7412554 #> 5         c    0   0.8166166 #> 6         c    1   0.1833834 #> 7         d    0   0.5778318 #> 8         d    1   0.4221682 #> 9         e    0   0.4003601 #> 10        e    1   0.5996399 #> 11        f    0   0.1945921 #> 12        f    1   0.6027532 #> 13        f    2   0.2026547"},{"path":"https://docs.ropensci.org/BaseSet/articles/fuzzy.html","id":"interpretation","dir":"Articles","previous_headings":"","what":"Interpretation","title":"Fuzzy sets","text":"Sometimes can bit hard understand fuzzy sets mean analysis. better understand let’s dive bit interpretation example: Imagine experiment collected data sample cells cell (elements). used program classify type cell (alpha, beta, delta, endothelial), sets. software returns probability type : higher, confident assignment: question type cells original sample? can easily answer looking relations higher confidence relationship cell. cell can two cell types, started 10 cells 11 elements . However, likely cell placed just single set? must cell misclassification: 10 cells example 2 cells maximum probability predicted types single cell type. Even cell two equal probabilities two cell types probable one cell types . Ideally predicted number cells per type cells higher confidence type match. can also look way around: good prediction cell type cell? can see cell type probable least one cell endothelial cell type two cells probable outcome. However, probabilities lower probabilities cells assigned cell type. mean method good method cell types specific enough cell. summary, cells probable 4 cell types except two cells might .","code":"sc_classification <- data.frame(     elements = c(\"D2ex_1\", \"D2ex_10\", \"D2ex_11\", \"D2ex_12\", \"D2ex_13\", \"D2ex_14\",                   \"D2ex_15\", \"D2ex_16\", \"D2ex_17\", \"D2ex_18\", \"D2ex_1\", \"D2ex_10\",                   \"D2ex_11\", \"D2ex_12\", \"D2ex_13\", \"D2ex_14\", \"D2ex_15\", \"D2ex_16\",                  \"D2ex_17\", \"D2ex_18\", \"D2ex_1\", \"D2ex_10\", \"D2ex_11\", \"D2ex_12\",                   \"D2ex_13\", \"D2ex_14\", \"D2ex_15\", \"D2ex_16\", \"D2ex_17\", \"D2ex_18\",                   \"D2ex_1\", \"D2ex_10\", \"D2ex_11\", \"D2ex_12\", \"D2ex_13\", \"D2ex_14\",                   \"D2ex_15\", \"D2ex_16\", \"D2ex_17\", \"D2ex_18\"),      sets = c(\"alpha\", \"alpha\", \"alpha\", \"alpha\", \"alpha\", \"alpha\", \"alpha\",               \"alpha\", \"alpha\", \"alpha\", \"endothel\", \"endothel\", \"endothel\",               \"endothel\", \"endothel\", \"endothel\", \"endothel\", \"endothel\",               \"endothel\", \"endothel\", \"delta\", \"delta\", \"delta\", \"delta\", \"delta\",               \"delta\", \"delta\", \"delta\", \"delta\", \"delta\", \"beta\", \"beta\", \"beta\",               \"beta\", \"beta\", \"beta\", \"beta\", \"beta\", \"beta\", \"beta\"),      fuzzy = c(0.18, 0.169, 0.149, 0.192, 0.154, 0.161, 0.169, 0.197, 0.162, 0.201,                0.215, 0.202, 0.17, 0.227, 0.196, 0.215, 0.161, 0.195, 0.178,                0.23, 0.184, 0.172, 0.153, 0.191, 0.156, 0.167, 0.165, 0.184,                0.162, 0.194, 0.197, 0.183, 0.151, 0.208, 0.16, 0.169, 0.169,                0.2, 0.154, 0.208), stringsAsFactors = FALSE) head(sc_classification) #>   elements  sets fuzzy #> 1   D2ex_1 alpha 0.180 #> 2  D2ex_10 alpha 0.169 #> 3  D2ex_11 alpha 0.149 #> 4  D2ex_12 alpha 0.192 #> 5  D2ex_13 alpha 0.154 #> 6  D2ex_14 alpha 0.161 sc_classification %>%      group_by(elements) %>%      filter(fuzzy == max(fuzzy)) %>%      group_by(sets) %>%      count() #> # A tibble: 3 × 2 #> # Groups:   sets [3] #>   sets         n #>   <chr>    <int> #> 1 alpha        1 #> 2 beta         2 #> 3 endothel     8 scTS <- tidySet(sc_classification) # Conversion of format sample_cells <- scTS %>%      element_size() %>%      group_by(elements) %>%      filter(probability == max(probability)) sample_cells #> # A tibble: 10 × 3 #> # Groups:   elements [10] #>    elements  size probability #>    <chr>    <dbl>       <dbl> #>  1 D2ex_1       0       0.422 #>  2 D2ex_10      0       0.449 #>  3 D2ex_11      0       0.508 #>  4 D2ex_12      1       0.412 #>  5 D2ex_13      0       0.482 #>  6 D2ex_14      0       0.456 #>  7 D2ex_15      0       0.484 #>  8 D2ex_16      0       0.422 #>  9 D2ex_17      0       0.488 #> 10 D2ex_18      1       0.414 scTS %>%      set_size() %>%      group_by(sets) %>%      filter(probability == max(probability)) #> # A tibble: 4 × 3 #> # Groups:   sets [4] #>   sets      size probability #>   <chr>    <dbl>       <dbl> #> 1 alpha        1       0.313 #> 2 beta         1       0.302 #> 3 delta        1       0.313 #> 4 endothel     2       0.303"},{"path":"https://docs.ropensci.org/BaseSet/articles/fuzzy.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Fuzzy sets","text":"","code":"#> R version 4.4.2 (2024-10-31) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 24.04.1 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] dplyr_1.1.4   BaseSet_1.0.0 #>  #> loaded via a namespace (and not attached): #>  [1] vctrs_0.6.5       cli_3.6.4         knitr_1.49        rlang_1.1.5       #>  [5] xfun_0.50         generics_0.1.3    textshaping_1.0.0 jsonlite_1.8.9    #>  [9] glue_1.8.0        htmltools_0.5.8.1 ragg_1.3.3        sass_0.4.9        #> [13] rmarkdown_2.29    tibble_3.2.1      evaluate_1.0.3    jquerylib_0.1.4   #> [17] fastmap_1.2.0     yaml_2.3.10       lifecycle_1.0.4   compiler_4.4.2    #> [21] fs_1.6.5          pkgconfig_2.0.3   systemfonts_1.2.1 digest_0.6.37     #> [25] R6_2.6.1          utf8_1.2.4        tidyselect_1.2.1  pillar_1.10.1     #> [29] magrittr_2.0.3    bslib_0.9.0       tools_4.4.2       pkgdown_2.1.1     #> [33] cachem_1.1.0      desc_1.4.3"},{"path":"https://docs.ropensci.org/BaseSet/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lluís Revilla Sancho. Author, maintainer, copyright holder. Zebulun Arendsee. Reviewer. Jennifer Chang. Reviewer.","code":""},{"path":"https://docs.ropensci.org/BaseSet/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Revilla Sancho L (2025). BaseSet: Working Sets Tidy Way. R package version 1.0.0, https://docs.ropensci.org/BaseSet/, https://github.com/ropensci/BaseSet.","code":"@Manual{,   title = {BaseSet: Working with Sets the Tidy Way},   author = {Lluís {Revilla Sancho}},   year = {2025},   note = {R package version 1.0.0,     https://docs.ropensci.org/BaseSet/},   url = {https://github.com/ropensci/BaseSet}, }"},{"path":"https://docs.ropensci.org/BaseSet/index.html","id":"baseset","dir":"","previous_headings":"","what":"Working with Sets the Tidy Way","title":"Working with Sets the Tidy Way","text":"goal BaseSet facilitate working sets efficient way. package implements methods work sets, intersection, union, complementary, power sets, cartesian product set operations tidy way. package supports classical fuzzy sets. Fuzzy sets similar classical sets vagueness relationship element set. also allows import several formats used life science world. Like GMT GAF OBO format file ontologies. can save information elements, sets relationship object . instance origin set, categorical numeric data associated sets… Watch BaseSet working examples vignettes. can also find related packages differences BaseSet. questions bugs open issue (remember Code Conduct)","code":""},{"path":"https://docs.ropensci.org/BaseSet/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Working with Sets the Tidy Way","text":"package depends packages Bioconductor. order install dependencies ’ll need first install BiocManager: can install latest version BaseSet Github :","code":"if (!require(\"BiocManager\")) {   install.packages(\"BiocManager\") } BiocManager::install(\"ropensci/BaseSet\",                       dependencies = TRUE, build_vignettes = TRUE, force = TRUE)"},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/index.html","id":"sets","dir":"","previous_headings":"","what":"Sets","title":"Working with Sets the Tidy Way","text":"can create set like : Perform typical operations like union, intersection. can name resulting set let default name: compute size sets among things: elements one set present : verb dplyr. can add columns, filter, remove add information sets:","code":"sets <- list(A = letters[1:5], B = c(\"a\", \"f\")) sets_analysis <- tidySet(sets) sets_analysis #>   elements sets fuzzy #> 1        a    A     1 #> 2        b    A     1 #> 3        c    A     1 #> 4        d    A     1 #> 5        e    A     1 #> 6        a    B     1 #> 7        f    B     1 union(sets_analysis, sets = c(\"A\", \"B\"))  #>   elements sets fuzzy #> 1        a  A∪B     1 #> 2        b  A∪B     1 #> 3        c  A∪B     1 #> 4        d  A∪B     1 #> 5        e  A∪B     1 #> 6        f  A∪B     1 # Or we can give a name to the new set union(sets_analysis, sets = c(\"A\", \"B\"), name = \"D\") #>   elements sets fuzzy #> 1        a    D     1 #> 2        b    D     1 #> 3        c    D     1 #> 4        d    D     1 #> 5        e    D     1 #> 6        f    D     1 # Or the intersection intersection(sets_analysis, sets = c(\"A\", \"B\")) #>   elements sets fuzzy #> 1        a  A∩B     1 # Keeping the other sets: intersection(sets_analysis, sets = c(\"A\", \"B\"), name = \"D\", keep = TRUE)  #>   elements sets fuzzy #> 1        a    A     1 #> 2        b    A     1 #> 3        c    A     1 #> 4        d    A     1 #> 5        e    A     1 #> 6        a    B     1 #> 7        f    B     1 #> 8        a    D     1 set_size(sets_analysis) #>   sets size probability #> 1    A    5           1 #> 2    B    2           1 subtract(sets_analysis, set_in = \"A\", not_in = \"B\", keep = FALSE) #>   elements sets fuzzy #> 1        b  A∖B     1 #> 2        c  A∖B     1 #> 3        d  A∖B     1 #> 4        e  A∖B     1 library(\"magrittr\") #>  #> Attaching package: 'magrittr' #> The following object is masked from 'package:BaseSet': #>  #>     subtract set.seed(4673) # To make it reproducible in your machine sets_enriched <- sets_analysis %>%    mutate(Keep = sample(c(TRUE, FALSE), 7, replace = TRUE)) %>%    filter(Keep == TRUE) %>%    select(-Keep) %>%    activate(\"sets\") %>%    mutate(sets_origin = c(\"Reactome\", \"KEGG\")) sets_enriched #>   elements sets fuzzy sets_origin #> 1        a    A     1    Reactome #> 2        b    A     1    Reactome #> 3        c    A     1    Reactome #> 4        d    A     1    Reactome #> 5        e    A     1    Reactome #> 6        f    B     1        KEGG  # Activating sets makes the verb affect only them: elements(sets_enriched) #>   elements #> 1        a #> 2        b #> 3        c #> 4        d #> 5        e #> 6        f relations(sets_enriched) #>   elements sets fuzzy #> 1        a    A     1 #> 2        b    A     1 #> 3        c    A     1 #> 4        d    A     1 #> 5        e    A     1 #> 6        f    B     1 sets(sets_enriched) #>   sets sets_origin #> 1    A    Reactome #> 6    B        KEGG"},{"path":"https://docs.ropensci.org/BaseSet/index.html","id":"fuzzy-sets","dir":"","previous_headings":"","what":"Fuzzy sets","title":"Working with Sets the Tidy Way","text":"fuzzy sets elements vaguely related set numeric value usually 0 1. implies association guaranteed. equivalent operations performed classical sets possible fuzzy sets: Assuming fuzzy value probability, can calculate probability several elements: fuzzy sets can filter certain levels (called alpha cut):","code":"relations <- data.frame(sets = c(rep(\"A\", 5), \"B\", \"B\"),                          elements = c(\"a\", \"b\", \"c\", \"d\", \"e\", \"a\", \"f\"),                         fuzzy = runif(7)) fuzzy_set <- tidySet(relations) fuzzy_set #>   elements sets     fuzzy #> 1        a    A 0.1837246 #> 2        b    A 0.4567009 #> 3        c    A 0.8152075 #> 4        d    A 0.5800610 #> 5        e    A 0.5724973 #> 6        a    B 0.9381182 #> 7        f    B 0.9460158 union(fuzzy_set, sets = c(\"A\", \"B\"))  #>   elements sets     fuzzy #> 1        a  A∪B 0.9381182 #> 2        b  A∪B 0.4567009 #> 3        c  A∪B 0.8152075 #> 4        d  A∪B 0.5800610 #> 5        e  A∪B 0.5724973 #> 6        f  A∪B 0.9460158 # Or we can give a name to the new set union(fuzzy_set, sets = c(\"A\", \"B\"), name = \"D\") #>   elements sets     fuzzy #> 1        a    D 0.9381182 #> 2        b    D 0.4567009 #> 3        c    D 0.8152075 #> 4        d    D 0.5800610 #> 5        e    D 0.5724973 #> 6        f    D 0.9460158 # Or the intersection intersection(fuzzy_set, sets = c(\"A\", \"B\")) #>   elements sets     fuzzy #> 1        a  A∩B 0.1837246 # Keeping the other sets: intersection(fuzzy_set, sets = c(\"A\", \"B\"), name = \"D\", keep = TRUE)  #>   elements sets     fuzzy #> 1        a    A 0.1837246 #> 2        b    A 0.4567009 #> 3        c    A 0.8152075 #> 4        d    A 0.5800610 #> 5        e    A 0.5724973 #> 6        a    B 0.9381182 #> 7        f    B 0.9460158 #> 8        a    D 0.1837246 # A set could be empty set_size(fuzzy_set) #>   sets size probability #> 1    A    0 0.014712455 #> 2    A    1 0.120607154 #> 3    A    2 0.318386944 #> 4    A    3 0.357078627 #> 5    A    4 0.166499731 #> 6    A    5 0.022715089 #> 7    B    0 0.003340637 #> 8    B    1 0.109184679 #> 9    B    2 0.887474684 # The more probable size of the sets: set_size(fuzzy_set) %>%    group_by(sets) %>%    filter(probability == max(probability)) #> # A tibble: 2 × 3 #> # Groups:   sets [2] #>   sets   size probability #>   <chr> <dbl>       <dbl> #> 1 A         3       0.357 #> 2 B         2       0.887 # Probability of belonging to several sets: element_size(fuzzy_set) #>    elements size probability #> 1         a    0  0.05051256 #> 2         a    1  0.77713204 #> 3         a    2  0.17235540 #> 4         b    0  0.54329910 #> 5         b    1  0.45670090 #> 6         c    0  0.18479253 #> 7         c    1  0.81520747 #> 8         d    0  0.41993900 #> 9         d    1  0.58006100 #> 10        e    0  0.42750268 #> 11        e    1  0.57249732 #> 12        f    0  0.05398419 #> 13        f    1  0.94601581 fuzzy_set %>%    filter(fuzzy > 0.5) %>%    activate(\"sets\") %>%    mutate(sets_origin = c(\"Reactome\", \"KEGG\")) #>   elements sets     fuzzy sets_origin #> 1        c    A 0.8152075    Reactome #> 2        d    A 0.5800610    Reactome #> 3        e    A 0.5724973    Reactome #> 4        a    B 0.9381182        KEGG #> 5        f    B 0.9460158        KEGG"},{"path":"https://docs.ropensci.org/BaseSet/index.html","id":"related-packages","dir":"","previous_headings":"","what":"Related packages","title":"Working with Sets the Tidy Way","text":"several packages related sets, partially overlap BaseSet functionality: {sets} Implements generalized approach, can store functions lists element set (BaseSet allows store character factor), harder operate tidy/long way. Also operations intersection union need happen two different objects, single TidySet object (class implemented BaseSet) can store one thousands sets. {GSEABase} Implements class store sets related information, doesn’t allow store fuzzy sets also quite slow creates several classes annotating set. {BiocSet} Implements tidy class sets handle fuzzy sets. also less functionality operate sets, like power sets cartesian product. BiocSet influenced development package. {hierarchicalSets} package focused clustering sets inside sets visualizations. However, BaseSet focused storing manipulate sets including hierarchical sets. {set6} package implements different classes different type sets including fuzzy sets, conditional sets. However, doesn’t handle information associated elements, sets relationship.","code":""},{"path":"https://docs.ropensci.org/BaseSet/index.html","id":"why-this-package","dir":"","previous_headings":"","what":"Why this package?","title":"Working with Sets the Tidy Way","text":"bioinformatics looking impact experiment enrichment methods applied. involves obtaining several sets genes several resources methods. Usually curated sets genes taken face value. However, several resources sets agree , regardless used without considering uncertainty sets composition. Fuzzy theory long studied sets whose elements degrees membership /uncertainty. Therefore one way improve methods involve using fuzzy methods logic field. couldn’t find package provided methods set creating (trying expand existing one knew). package intended easy use someone working collections sets flexible methods logic can use. consistent, standard fuzzy logic default might right one data. Consider changing defaults match framework data obtained .","code":""},{"path":"https://docs.ropensci.org/BaseSet/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Working with Sets the Tidy Way","text":"Please note package released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/BaseSet-package.html","id":null,"dir":"Reference","previous_headings":"","what":"BaseSet: Working with Sets the Tidy Way — BaseSet-package","title":"BaseSet: Working with Sets the Tidy Way — BaseSet-package","text":"Implements class methods work sets, intersection, union, complementary sets, power sets, cartesian product set operations \"tidy\" way. set operations available classical sets fuzzy sets. Import sets several formats several data structures.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/BaseSet-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"BaseSet: Working with Sets the Tidy Way — BaseSet-package","text":"provides class TidySet methods operations sets.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/BaseSet-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"BaseSet: Working with Sets the Tidy Way — BaseSet-package","text":"Maintainer: Lluís Revilla Sancho lluis.revilla@gmail.com (ORCID) [copyright holder] contributors: Zebulun Arendsee [reviewer] Jennifer Chang [reviewer]","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/BaseSet-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BaseSet: Working with Sets the Tidy Way — BaseSet-package","text":"","code":"set <- list(\"A\" = letters[1:5], \"B\" = letters[4:7]) TS <- tidySet(set) cardinality(TS) #>   sets cardinality #> 1    A           5 #> 2    B           4 intersection(TS, c(\"A\", \"B\")) #>   elements sets fuzzy #> 1        d  A∩B     1 #> 2        e  A∩B     1"},{"path":"https://docs.ropensci.org/BaseSet/reference/TidySet-class.html","id":null,"dir":"Reference","previous_headings":"","what":"A tidy class to represent a set — TidySet-class","title":"A tidy class to represent a set — TidySet-class","text":"set group unique elements can either fuzzy set, relationship 0 1 nominal.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/TidySet-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A tidy class to represent a set — TidySet-class","text":"printed element set relationship shown. can created lists, matrices data.frames. Check tidySet() constructor information.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/TidySet-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"A tidy class to represent a set — TidySet-class","text":"relations data.frame elements sets belong. elements data.frame unique elements related information. sets data.frame unique sets related information.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/TidySet-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A tidy class to represent a set — TidySet-class","text":"","code":"x <- list(\"A\" = letters[1:5], \"B\" = LETTERS[3:7]) a <- tidySet(x) a #>    elements sets fuzzy #> 1         a    A     1 #> 2         b    A     1 #> 3         c    A     1 #> 4         d    A     1 #> 5         e    A     1 #> 6         C    B     1 #> 7         D    B     1 #> 8         E    B     1 #> 9         F    B     1 #> 10        G    B     1 x <- list(\"A\" = letters[1:5], \"B\" = character()) b <- tidySet(x) b #>   elements sets fuzzy #> 1        a    A     1 #> 2        b    A     1 #> 3        c    A     1 #> 4        d    A     1 #> 5        e    A     1 name_sets(b) #> [1] \"A\" \"B\""},{"path":"https://docs.ropensci.org/BaseSet/reference/activate.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the context of subsequent manipulations. — activate","title":"Determine the context of subsequent manipulations. — activate","text":"Functions help perform action just type data: elements, sets relations. activate: table focus future manipulations: elements, sets relations. active: check focus TidySet. deactivate: remove focus specific TidySet-","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/activate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the context of subsequent manipulations. — activate","text":"","code":"activate(.data, what)  active(.data)  deactivate(.data)"},{"path":"https://docs.ropensci.org/BaseSet/reference/activate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the context of subsequent manipulations. — activate","text":".data TidySet object. Either \"elements\", \"sets\" \"relations\"","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/activate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the context of subsequent manipulations. — activate","text":"TidySet object.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/activate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine the context of subsequent manipulations. — activate","text":"","code":"relations <- data.frame(     sets = c(rep(\"a\", 5), \"b\", rep(\"a2\", 5), \"b2\"),     elements = rep(letters[seq_len(6)], 2),     fuzzy = runif(12) ) a <- tidySet(relations) elements(a) <- cbind(elements(a),     type = c(rep(\"Gene\", 4), rep(\"lncRNA\", 2)) ) # Filter in the whole TidySet filter(a, elements == \"a\") #>   elements sets      fuzzy type #> 1        a    a 0.08075014 Gene #> 2        a   a2 0.49777739 Gene filter(a, elements == \"a\", type == \"Gene\") #>   elements sets      fuzzy type #> 1        a    a 0.08075014 Gene #> 2        a   a2 0.49777739 Gene # Equivalent to filter_elements filter_element(a, type == \"Gene\") #>   elements sets      fuzzy type #> 1        a    a 0.08075014 Gene #> 2        b    a 0.83433304 Gene #> 3        c    a 0.60076089 Gene #> 4        d    a 0.15720844 Gene #> 5        a   a2 0.49777739 Gene #> 6        b   a2 0.28976724 Gene #> 7        c   a2 0.73288199 Gene #> 8        d   a2 0.77252151 Gene a <- activate(a, \"elements\") active(a) #> [1] \"elements\" filter(a, type == \"Gene\") #>   elements sets      fuzzy type #> 1        a    a 0.08075014 Gene #> 2        b    a 0.83433304 Gene #> 3        c    a 0.60076089 Gene #> 4        d    a 0.15720844 Gene #> 5        a   a2 0.49777739 Gene #> 6        b   a2 0.28976724 Gene #> 7        c   a2 0.73288199 Gene #> 8        d   a2 0.77252151 Gene a <- deactivate(a) active(a) #> NULL filter(a, type == \"Gene\") #>   elements sets      fuzzy type #> 1        a    a 0.08075014 Gene #> 2        b    a 0.83433304 Gene #> 3        c    a 0.60076089 Gene #> 4        d    a 0.15720844 Gene #> 5        a   a2 0.49777739 Gene #> 6        b   a2 0.28976724 Gene #> 7        c   a2 0.73288199 Gene #> 8        d   a2 0.77252151 Gene"},{"path":"https://docs.ropensci.org/BaseSet/reference/add_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Add column — add_column","title":"Add column — add_column","text":"Add column slot TidySet object.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/add_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add column — add_column","text":"","code":"add_column(object, slot, columns)  # S4 method for class 'TidySet,character' add_column(object, slot, columns)"},{"path":"https://docs.ropensci.org/BaseSet/reference/add_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add column — add_column","text":"object TidySet object. slot TidySet slot. columns columns add.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/add_column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add column — add_column","text":"TidySet object.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/add_column.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Add column — add_column","text":"add_column(object = TidySet, slot = character): Add column slot","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/add_column.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add column — add_column","text":"","code":"relations <- data.frame(     sets = c(rep(\"a\", 5), \"b\"),     elements = letters[seq_len(6)],     fuzzy = runif(6) ) TS <- tidySet(relations) add_column(TS, \"relations\", data.frame(well = c(     \"GOOD\", \"BAD\", \"WORSE\",     \"UGLY\", \"FOE\", \"HEY\" ))) #>   elements sets      fuzzy  well #> 1        a    a 0.03424133  GOOD #> 2        b    a 0.32038573   BAD #> 3        c    a 0.40232824 WORSE #> 4        d    a 0.19566983  UGLY #> 5        e    a 0.40353812   FOE #> 6        f    b 0.06366146   HEY"},{"path":"https://docs.ropensci.org/BaseSet/reference/add_elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Add elements to a TidySet — add_elements","title":"Add elements to a TidySet — add_elements","text":"Functions add elements. elements new added, otherwise omitted.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/add_elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add elements to a TidySet — add_elements","text":"","code":"add_elements(object, elements, ...)"},{"path":"https://docs.ropensci.org/BaseSet/reference/add_elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add elements to a TidySet — add_elements","text":"object TidySet object elements character vector elements. ... Placeholder arguments passed method. Currently used.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/add_elements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add elements to a TidySet — add_elements","text":"TidySet object new elements.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/add_elements.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Add elements to a TidySet — add_elements","text":"add_element set information elements. Remember add/modify needed mutate mutate_element","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/add_elements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add elements to a TidySet — add_elements","text":"","code":"x <- list(\"a\" = letters[1:5], \"b\" = LETTERS[3:7]) a <- tidySet(x) b <- add_elements(a, \"fg\") elements(b) #>    elements #> 1         a #> 2         b #> 3         c #> 4         d #> 5         e #> 6         C #> 7         D #> 8         E #> 9         F #> 10        G #> 11       fg"},{"path":"https://docs.ropensci.org/BaseSet/reference/add_relation.html","id":null,"dir":"Reference","previous_headings":"","what":"Add relations — add_relation","title":"Add relations — add_relation","text":"Given TidySet adds new relations elements sets.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/add_relation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add relations — add_relation","text":"","code":"add_relation(object, relations, ...)  # S4 method for class 'TidySet,data.frame' add_relation(object, relations)"},{"path":"https://docs.ropensci.org/BaseSet/reference/add_relation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add relations — add_relation","text":"object TidySet object relations data.frame object ... Placeholder arguments passed method. Currently used.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/add_relation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add relations — add_relation","text":"TidySet object.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/add_relation.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Add relations — add_relation","text":"add_relation(object = TidySet, relations = data.frame): Adds relations","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/add_relation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add relations — add_relation","text":"","code":"relations <- data.frame(     sets = c(rep(\"A\", 5), \"B\"),     elements = letters[seq_len(6)],     fuzzy = runif(6) ) TS <- tidySet(relations) relations <- data.frame(     sets = c(rep(\"A2\", 5), \"B2\"),     elements = letters[seq_len(6)],     fuzzy = runif(6),     new = runif(6) ) add_relation(TS, relations) #>    elements sets      fuzzy        new #> 1         a    A 0.38870131         NA #> 2         b    A 0.97554784         NA #> 3         c    A 0.28989230         NA #> 4         d    A 0.67838043         NA #> 5         e    A 0.73531960         NA #> 6         f    B 0.19595673         NA #> 7         a   A2 0.98053967 0.03123033 #> 8         b   A2 0.74152153 0.22556253 #> 9         c   A2 0.05144628 0.30083081 #> 10        d   A2 0.53021246 0.63646561 #> 11        e   A2 0.69582388 0.47902455 #> 12        f   B2 0.68855600 0.43217126"},{"path":"https://docs.ropensci.org/BaseSet/reference/add_relations.html","id":null,"dir":"Reference","previous_headings":"","what":"Add relations to a TidySet — add_relations","title":"Add relations to a TidySet — add_relations","text":"Adds new relations existing new sets elements. sets elements exist added.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/add_relations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add relations to a TidySet — add_relations","text":"","code":"add_relations(object, elements, sets, fuzzy, ...)"},{"path":"https://docs.ropensci.org/BaseSet/reference/add_relations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add relations to a TidySet — add_relations","text":"object TidySet object elements character vector elements. sets character vector sets added. fuzzy strength membership. ... Placeholder arguments passed method. Currently used.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/add_relations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add relations to a TidySet — add_relations","text":"TidySet object new relations.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/add_relations.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Add relations to a TidySet — add_relations","text":"add_relations set information relationship. Remember add/modify needed mutate mutate_relation","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/add_relations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add relations to a TidySet — add_relations","text":"","code":"x <- list(\"a\" = letters[1:5], \"b\" = LETTERS[3:7]) a <- tidySet(x) add_relations(a, elements = c(\"a\", \"b\", \"g\"), sets = \"d\") #>    elements sets fuzzy #> 1         a    a     1 #> 2         b    a     1 #> 3         c    a     1 #> 4         d    a     1 #> 5         e    a     1 #> 6         C    b     1 #> 7         D    b     1 #> 8         E    b     1 #> 9         F    b     1 #> 10        G    b     1 #> 11        a    d     1 #> 12        b    d     1 #> 13        g    d     1 add_relations(a, elements = c(\"a\", \"b\"), sets = c(\"d\", \"g\")) #>    elements sets fuzzy #> 1         a    a     1 #> 2         b    a     1 #> 3         c    a     1 #> 4         d    a     1 #> 5         e    a     1 #> 6         C    b     1 #> 7         D    b     1 #> 8         E    b     1 #> 9         F    b     1 #> 10        G    b     1 #> 11        a    d     1 #> 12        b    g     1 add_relations(a, elements = c(\"a\", \"b\"), sets = c(\"d\", \"g\"), fuzzy = 0.5) #>    elements sets fuzzy #> 1         a    a   1.0 #> 2         b    a   1.0 #> 3         c    a   1.0 #> 4         d    a   1.0 #> 5         e    a   1.0 #> 6         C    b   1.0 #> 7         D    b   1.0 #> 8         E    b   1.0 #> 9         F    b   1.0 #> 10        G    b   1.0 #> 11        a    d   0.5 #> 12        b    g   0.5 add_relations(a,     elements = c(\"a\", \"b\"), sets = c(\"d\", \"g\"),     fuzzy = c(0.5, 0.7) ) #>    elements sets fuzzy #> 1         a    a   1.0 #> 2         b    a   1.0 #> 3         c    a   1.0 #> 4         d    a   1.0 #> 5         e    a   1.0 #> 6         C    b   1.0 #> 7         D    b   1.0 #> 8         E    b   1.0 #> 9         F    b   1.0 #> 10        G    b   1.0 #> 11        a    d   0.5 #> 12        b    g   0.7"},{"path":"https://docs.ropensci.org/BaseSet/reference/add_sets.html","id":null,"dir":"Reference","previous_headings":"","what":"Add sets to a TidySet — add_sets","title":"Add sets to a TidySet — add_sets","text":"Functions add sets. sets new added, otherwise omitted.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/add_sets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add sets to a TidySet — add_sets","text":"","code":"add_sets(object, sets, ...)"},{"path":"https://docs.ropensci.org/BaseSet/reference/add_sets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add sets to a TidySet — add_sets","text":"object TidySet object sets character vector sets added. ... Placeholder arguments passed method. Currently used.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/add_sets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add sets to a TidySet — add_sets","text":"TidySet object new sets.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/add_sets.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Add sets to a TidySet — add_sets","text":"add_sets set information sets. Remember add/modify needed mutate mutate_set","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/add_sets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add sets to a TidySet — add_sets","text":"","code":"x <- list(\"a\" = letters[1:5], \"b\" = LETTERS[3:7]) a <- tidySet(x) b <- add_sets(a, \"fg\") sets(b) #>   sets #> 1    a #> 2    b #> 3   fg"},{"path":"https://docs.ropensci.org/BaseSet/reference/adjacency.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjacency — adjacency","title":"Adjacency — adjacency","text":"two elements connected ?","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/adjacency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjacency — adjacency","text":"","code":"# S3 method for class 'TidySet' adjacency(object)  adjacency_element(object)  adjacency_set(object)  # S3 method for class 'TidySet' adjacency(object)"},{"path":"https://docs.ropensci.org/BaseSet/reference/adjacency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjacency — adjacency","text":"object TidySet object","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/adjacency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjacency — adjacency","text":"square matrix, 1 two nodes connected, 0 otherwise.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/adjacency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjacency — adjacency","text":"","code":"x <- list(\"SET1\" = letters[1:5], \"SET2\" = LETTERS[3:7]) a <- tidySet(x) adjacency_element(a) #>   a b c d e C D E F G #> a 1 1 1 1 1 0 0 0 0 0 #> b 1 1 1 1 1 0 0 0 0 0 #> c 1 1 1 1 1 0 0 0 0 0 #> d 1 1 1 1 1 0 0 0 0 0 #> e 1 1 1 1 1 0 0 0 0 0 #> C 0 0 0 0 0 1 1 1 1 1 #> D 0 0 0 0 0 1 1 1 1 1 #> E 0 0 0 0 0 1 1 1 1 1 #> F 0 0 0 0 0 1 1 1 1 1 #> G 0 0 0 0 0 1 1 1 1 1 adjacency_set(a) #>      SET1 SET2 #> SET1    1    0 #> SET2    0    1"},{"path":"https://docs.ropensci.org/BaseSet/reference/arrange_.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrange the order of a TidySet — arrange.TidySet","title":"Arrange the order of a TidySet — arrange.TidySet","text":"Use arrange extract columns TidySet object. can use activate filter use specific function. S3 method filters using information TidySet.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/arrange_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrange the order of a TidySet — arrange.TidySet","text":"","code":"# S3 method for class 'TidySet' arrange(.data, ...)  arrange_set(.data, ...)  arrange_element(.data, ...)  arrange_relation(.data, ...)"},{"path":"https://docs.ropensci.org/BaseSet/reference/arrange_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrange the order of a TidySet — arrange.TidySet","text":".data TidySet object ... Comma separated list variables names expressions integer column position used reorder TidySet.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/arrange_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arrange the order of a TidySet — arrange.TidySet","text":"TidySet object","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/arrange_.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arrange the order of a TidySet — arrange.TidySet","text":"","code":"relations <- data.frame(     sets = c(rep(\"A\", 5), \"B\", rep(\"A2\", 5), \"B2\"),     elements = rep(letters[seq_len(6)], 2),     fuzzy = runif(12) ) a <- tidySet(relations) a <- mutate_element(a,     type = c(rep(\"Gene\", 4), rep(\"lncRNA\", 2)) )  b <- arrange(a, desc(type)) elements(b) #>   elements   type #> 1        e lncRNA #> 2        f lncRNA #> 5        a   Gene #> 6        b   Gene #> 7        c   Gene #> 8        d   Gene b <- arrange_element(a, elements) elements(b) #>   elements   type #> 1        a   Gene #> 2        b   Gene #> 3        c   Gene #> 4        d   Gene #> 5        e lncRNA #> 6        f lncRNA # Arrange sets arrange_set(a, sets) #>    elements sets      fuzzy   type #> 1         a    A 0.70643384   Gene #> 2         b    A 0.94857658   Gene #> 3         c    A 0.18033877   Gene #> 4         d    A 0.21689988   Gene #> 5         e    A 0.68016292 lncRNA #> 6         f    B 0.49884561 lncRNA #> 7         a   A2 0.64167935   Gene #> 8         b   A2 0.66028435   Gene #> 9         c   A2 0.09602416   Gene #> 10        d   A2 0.76560016   Gene #> 11        e   A2 0.76967480 lncRNA #> 12        f   B2 0.99071231 lncRNA"},{"path":"https://docs.ropensci.org/BaseSet/reference/as.data.frame.TidySet.html","id":null,"dir":"Reference","previous_headings":"","what":"Transforms a TidySet to a data.frame — as.data.frame.TidySet","title":"Transforms a TidySet to a data.frame — as.data.frame.TidySet","text":"Flattens three slots single big table","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/as.data.frame.TidySet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transforms a TidySet to a data.frame — as.data.frame.TidySet","text":"","code":"# S3 method for class 'TidySet' as.data.frame(x, ...)"},{"path":"https://docs.ropensci.org/BaseSet/reference/as.data.frame.TidySet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transforms a TidySet to a data.frame — as.data.frame.TidySet","text":"x TidySet object. ... Placeholder arguments passed method. Currently used.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/as.data.frame.TidySet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transforms a TidySet to a data.frame — as.data.frame.TidySet","text":"data.frame table.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/as.list.TidySet.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to list — as.list.TidySet","title":"Convert to list — as.list.TidySet","text":"Converts TidySet list.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/as.list.TidySet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to list — as.list.TidySet","text":"","code":"# S3 method for class 'TidySet' as.list(x, ...)"},{"path":"https://docs.ropensci.org/BaseSet/reference/as.list.TidySet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to list — as.list.TidySet","text":"x TidySet object coerced list. ... Placeholder arguments passed method. Currently used.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/as.list.TidySet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to list — as.list.TidySet","text":"list.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/as.list.TidySet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to list — as.list.TidySet","text":"","code":"r <- data.frame(sets = c(\"A\", \"A\", \"A\", \"B\", \"C\"),              elements = c(letters[1:3], letters[2:3]),              fuzzy = runif(5),              info = rep_len(c(\"important\", \"very important\"), 5)) TS <- tidySet(r) TS #>   elements sets     fuzzy           info #> 1        a    A 0.9705209      important #> 2        b    A 0.3891828 very important #> 3        c    A 0.4611865      important #> 4        b    B 0.3152418 very important #> 5        c    C 0.1746759      important as.list(TS) #> Warning: Dropping information on the coercion. #> $A #>         a         b         c  #> 0.9705209 0.3891828 0.4611865  #>  #> $B #>         b  #> 0.3152418  #>  #> $C #>         c  #> 0.1746759  #>"},{"path":"https://docs.ropensci.org/BaseSet/reference/c-TidySet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine Values into a Vector or List — c,TidySet-method","title":"Combine Values into a Vector or List — c,TidySet-method","text":"method combines TidySets. works first element TidySet.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/c-TidySet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Values into a Vector or List — c,TidySet-method","text":"","code":"# S4 method for class 'TidySet' c(x, ...)"},{"path":"https://docs.ropensci.org/BaseSet/reference/c-TidySet-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Values into a Vector or List — c,TidySet-method","text":"x TidySet object. ... Objects concatenated. NULL entries dropped.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/c-TidySet-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine Values into a Vector or List — c,TidySet-method","text":"","code":"TS <- tidySet(list(A = letters[1:5], B = letters[6])) TS2 <- c(TS, data.frame(sets = \"C\", elements = \"gg\"))"},{"path":"https://docs.ropensci.org/BaseSet/reference/cardinality.html","id":null,"dir":"Reference","previous_headings":"","what":"Cardinality or membership of sets — cardinality","title":"Cardinality or membership of sets — cardinality","text":"Calculates membership sets according logic defined FUN.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/cardinality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cardinality or membership of sets — cardinality","text":"","code":"cardinality(object, sets = NULL, ...)  # S4 method for class 'TidySet' cardinality(object, sets, FUN = \"sum\", ...)"},{"path":"https://docs.ropensci.org/BaseSet/reference/cardinality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cardinality or membership of sets — cardinality","text":"object TidySet object. sets Character vector name sets. ... arguments passed FUN. FUN Function returns single numeric value given vector fuzzy values.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/cardinality.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Cardinality or membership of sets — cardinality","text":"cardinality(TidySet): Cardinality sets","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/cardinality.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cardinality or membership of sets — cardinality","text":"","code":"rel <- list(A = letters[1:3], B = letters[1:2]) TS <- tidySet(rel) cardinality(TS, \"A\") #>   sets cardinality #> 1    A           3"},{"path":"https://docs.ropensci.org/BaseSet/reference/cartesian.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the cartesian product of two sets — cartesian","title":"Create the cartesian product of two sets — cartesian","text":"Given two sets creates new sets one element set","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/cartesian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the cartesian product of two sets — cartesian","text":"","code":"cartesian(object, set1, set2, name = NULL, ...)  # S3 method for class 'TidySet' cartesian(   object,   set1,   set2,   name = NULL,   keep = TRUE,   keep_relations = keep,   keep_elements = keep,   keep_sets = keep,   ... )"},{"path":"https://docs.ropensci.org/BaseSet/reference/cartesian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the cartesian product of two sets — cartesian","text":"object TidySet object. set1, set2 name sets used cartesian product name name new set. ... Placeholder arguments passed method. Currently used. keep logical value want keep. keep_relations logical value wan keep old relations. keep_elements logical value wan keep old elements. keep_sets logical value wan keep old sets.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/cartesian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the cartesian product of two sets — cartesian","text":"TidySet object new set","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/cartesian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the cartesian product of two sets — cartesian","text":"","code":"relations <- data.frame(     sets = c(rep(\"a\", 5), \"b\"),     elements = letters[seq_len(6)] ) TS <- tidySet(relations) cartesian(TS, \"a\", \"b\") #>    elements  sets fuzzy #> 1         a     a     1 #> 2         b     a     1 #> 3         c     a     1 #> 4         d     a     1 #> 5         e     a     1 #> 6         f     b     1 #> 7         a a⨯b_1     1 #> 8         f a⨯b_1     1 #> 9         b a⨯b_2     1 #> 10        f a⨯b_2     1 #> 11        c a⨯b_3     1 #> 12        f a⨯b_3     1 #> 13        d a⨯b_4     1 #> 14        f a⨯b_4     1 #> 15        e a⨯b_5     1 #> 16        f a⨯b_5     1 #> 17        a   a⨯b     1 #> 18        f   a⨯b     1 #> 19        b   a⨯b     1 #> 20        c   a⨯b     1 #> 21        d   a⨯b     1 #> 22        e   a⨯b     1"},{"path":"https://docs.ropensci.org/BaseSet/reference/complement.html","id":null,"dir":"Reference","previous_headings":"","what":"Complement TidySet — complement","title":"Complement TidySet — complement","text":"Use complement find elements sets TidySet object. can use activate complement use specific function. must specify want complements sets elements.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/complement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complement TidySet — complement","text":"","code":"complement(.data, ...)"},{"path":"https://docs.ropensci.org/BaseSet/reference/complement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complement TidySet — complement","text":".data TidySet object ... arguments passed either complement_set() complement_element().","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/complement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complement TidySet — complement","text":"TidySet object","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/complement.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Complement TidySet — complement","text":"","code":"rel <- data.frame(     sets = c(\"A\", \"A\", \"B\", \"B\", \"C\", \"C\"),     elements = letters[seq_len(6)],     fuzzy = runif(6) ) TS <- tidySet(rel) TS |>     activate(\"elements\") |>     complement(\"a\") #>   elements sets      fuzzy #> 1        a    A 0.53157354 #> 2        b    A 0.49363702 #> 3        c    B 0.77930863 #> 4        d    B 0.20417834 #> 5        e    C 0.71339728 #> 6        f    C 0.06521611 #> 7        a   ∁a 0.46842646 TS |>     activate(\"elements\") |>     complement(\"a\", \"C_a\", keep = FALSE) #>   elements sets     fuzzy #> 1        a  C_a 0.4684265 TS |>     activate(\"set\") |>     complement(\"A\") #>   elements sets      fuzzy #> 1        a    A 0.53157354 #> 2        b    A 0.49363702 #> 3        c    B 0.77930863 #> 4        d    B 0.20417834 #> 5        e    C 0.71339728 #> 6        f    C 0.06521611 #> 7        a   ∁A 0.46842646 #> 8        b   ∁A 0.50636298 TS |>     activate(\"set\") |>     complement(\"A\", keep = FALSE) #>   elements sets     fuzzy #> 1        a   ∁A 0.4684265 #> 2        b   ∁A 0.5063630 TS |>     activate(\"set\") |>     complement(\"A\", FUN = function(x){abs(x - 0.2)}, keep = FALSE) #>   elements sets     fuzzy #> 1        a   ∁A 0.3315735 #> 2        b   ∁A 0.2936370"},{"path":"https://docs.ropensci.org/BaseSet/reference/complement_element.html","id":null,"dir":"Reference","previous_headings":"","what":"Complement of elements — complement_element","title":"Complement of elements — complement_element","text":"Return objects without elements listed","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/complement_element.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complement of elements — complement_element","text":"","code":"complement_element(object, elements, ...)  # S4 method for class 'TidySet,characterORfactor' complement_element(   object,   elements,   name = NULL,   FUN = NULL,   keep = TRUE,   keep_relations = keep,   keep_elements = keep,   keep_sets = keep )"},{"path":"https://docs.ropensci.org/BaseSet/reference/complement_element.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complement of elements — complement_element","text":"object TidySet object. elements set look complement. ... Placeholder arguments passed method. Currently used. name Name new set. default adds \"C\". FUN function applied performing union. standard union \"max\" function, can provide function given numeric vector returns single number. keep Logical value keep sets. keep_relations logical value wan keep old relations. keep_elements logical value wan keep old elements. keep_sets logical value wan keep old sets.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/complement_element.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complement of elements — complement_element","text":"TidySet object.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/complement_element.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Complement of elements — complement_element","text":"complement_element(object = TidySet, elements = characterORfactor): Complement elements.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/complement_element.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Complement of elements — complement_element","text":"","code":"relations <- data.frame(     sets = c(\"A\", \"A\", \"B\", \"B\", \"C\", \"C\"),     elements = letters[seq_len(6)],     fuzzy = runif(6) ) TS <- tidySet(relations) complement_element(TS, \"a\", \"C_a\") #>   elements sets     fuzzy #> 1        a    A 0.3542068 #> 2        b    A 0.8251994 #> 3        c    B 0.2738182 #> 4        d    B 0.5700450 #> 5        e    C 0.3357191 #> 6        f    C 0.5962628 #> 7        a  C_a 0.6457932 complement_element(TS, \"a\", \"C_a\", keep = FALSE) #>   elements sets     fuzzy #> 1        a  C_a 0.6457932"},{"path":"https://docs.ropensci.org/BaseSet/reference/complement_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Complement of a set — complement_set","title":"Complement of a set — complement_set","text":"Return complement set","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/complement_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complement of a set — complement_set","text":"","code":"complement_set(object, sets, ...)  # S4 method for class 'TidySet,characterORfactor' complement_set(   object,   sets,   name = NULL,   FUN = NULL,   keep = TRUE,   keep_relations = keep,   keep_elements = keep,   keep_sets = keep )"},{"path":"https://docs.ropensci.org/BaseSet/reference/complement_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complement of a set — complement_set","text":"object TidySet object. sets name set look complement. ... Placeholder arguments passed method. Currently used. name Name new set. default adds \"C\". FUN function applied performing union. standard union \"max\" function, can provide function given numeric vector returns single number. keep Logical value keep sets. keep_relations logical value wan keep old relations. keep_elements logical value wan keep old elements. keep_sets logical value wan keep old sets.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/complement_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complement of a set — complement_set","text":"TidySet object.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/complement_set.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Complement of a set — complement_set","text":"complement_set(object = TidySet, sets = characterORfactor): Complement sets.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/complement_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Complement of a set — complement_set","text":"","code":"relations <- data.frame(     sets = c(\"A\", \"A\", \"B\", \"B\", \"C\", \"C\"),     elements = letters[seq_len(6)],     fuzzy = runif(6) ) TS <- tidySet(relations) complement_set(TS, \"A\") #>   elements sets      fuzzy #> 1        a    A 0.19151803 #> 2        b    A 0.94776394 #> 3        c    B 0.54248041 #> 4        d    B 0.54460339 #> 5        e    C 0.27859715 #> 6        f    C 0.44670247 #> 7        a   ∁A 0.80848197 #> 8        b   ∁A 0.05223606"},{"path":"https://docs.ropensci.org/BaseSet/reference/df2TS.html","id":null,"dir":"Reference","previous_headings":"","what":"The opposite of as.data.frame — df2TS","title":"The opposite of as.data.frame — df2TS","text":"Convert data.frame TidySet first using relations. requires original TidySet order convert back resemble position columns.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/df2TS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The opposite of as.data.frame — df2TS","text":"","code":"df2TS(.data = NULL, df)"},{"path":"https://docs.ropensci.org/BaseSet/reference/df2TS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The opposite of as.data.frame — df2TS","text":".data original TidySet df flattened data.frame","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/df2TS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The opposite of as.data.frame — df2TS","text":"TidySet object","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/dimnames.TidySet.html","id":null,"dir":"Reference","previous_headings":"","what":"Dimnames of a TidySet — dimnames.TidySet","title":"Dimnames of a TidySet — dimnames.TidySet","text":"Retrieve column names slots TidySet.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/dimnames.TidySet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimnames of a TidySet — dimnames.TidySet","text":"","code":"# S3 method for class 'TidySet' dimnames(x)"},{"path":"https://docs.ropensci.org/BaseSet/reference/dimnames.TidySet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dimnames of a TidySet — dimnames.TidySet","text":"x TidySet object.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/dimnames.TidySet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dimnames of a TidySet — dimnames.TidySet","text":"list names columns sets, elements relations.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/dimnames.TidySet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dimnames of a TidySet — dimnames.TidySet","text":"","code":"relations <- data.frame(     sets = c(rep(\"a\", 5), \"b\"),     elements = letters[seq_len(6)],     fuzzy = runif(6) ) TS <- tidySet(relations) dimnames(TS) #> $sets #> [1] \"sets\" #>  #> $elements #> [1] \"elements\" #>  #> $relations #> [1] \"sets\"     \"elements\" \"fuzzy\"    #>"},{"path":"https://docs.ropensci.org/BaseSet/reference/droplevels.TidySet.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop unused elements and sets — droplevels.TidySet","title":"Drop unused elements and sets — droplevels.TidySet","text":"Drop elements sets without relation.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/droplevels.TidySet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop unused elements and sets — droplevels.TidySet","text":"","code":"# S3 method for class 'TidySet' droplevels(x, elements = TRUE, sets = TRUE, relations = TRUE, ...)"},{"path":"https://docs.ropensci.org/BaseSet/reference/droplevels.TidySet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop unused elements and sets — droplevels.TidySet","text":"x TidySet object. elements Logical value: elements dropped? sets Logical value: sets dropped? relations Logical value: sets dropped? ... arguments, currently ignored.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/droplevels.TidySet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop unused elements and sets — droplevels.TidySet","text":"TidySet object.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/droplevels.TidySet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drop unused elements and sets — droplevels.TidySet","text":"","code":"rel <- list(A = letters[1:3], B = character()) TS <- tidySet(rel) TS #>   elements sets fuzzy #> 1        a    A     1 #> 2        b    A     1 #> 3        c    A     1 sets(TS) #>   sets #> 1    A #> 2    B TS2 <- droplevels(TS) TS2 #>   elements sets fuzzy #> 1        a    A     1 #> 2        b    A     1 #> 3        c    A     1 sets(TS2) #>   sets #> 1    A"},{"path":"https://docs.ropensci.org/BaseSet/reference/element_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the size of the elements — element_size","title":"Calculates the size of the elements — element_size","text":"Assuming fuzzy values probabilities, calculates probability different sizes given set.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/element_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the size of the elements — element_size","text":"","code":"element_size(object, elements = NULL)  # S4 method for class 'TidySet' element_size(object, elements = NULL)"},{"path":"https://docs.ropensci.org/BaseSet/reference/element_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the size of the elements — element_size","text":"object TidySet object. elements element length calculated.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/element_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the size of the elements — element_size","text":"list size elements probability size.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/element_size.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Calculates the size of the elements — element_size","text":"element_size(TidySet): Calculates number sets element appears length_set()","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/element_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the size of the elements — element_size","text":"","code":"relations <- data.frame(     sets = c(rep(\"A\", 5), \"B\", \"C\"),     elements = c(letters[seq_len(6)], letters[6]),     fuzzy = runif(7) ) a <- tidySet(relations) element_size(a) #>    elements size probability #> 1         a    0   0.4400872 #> 2         a    1   0.5599128 #> 3         b    0   0.1429164 #> 4         b    1   0.8570836 #> 5         c    0   0.6151903 #> 6         c    1   0.3848097 #> 7         d    0   0.4720830 #> 8         d    1   0.5279170 #> 9         e    0   0.3993625 #> 10        e    1   0.6006375 #> 11        f    0   0.5243893 #> 12        f    1   0.3997999 #> 13        f    2   0.0758108"},{"path":"https://docs.ropensci.org/BaseSet/reference/elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Elements of the TidySet — elements","title":"Elements of the TidySet — elements","text":"Given TidySet retrieve elements substitute .","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Elements of the TidySet — elements","text":"","code":"elements(object)  elements(object) <- value  # S4 method for class 'TidySet' elements(object)  # S4 method for class 'TidySet' elements(object) <- value  replace_elements(object, value)  # S4 method for class 'TidySet,missing' nElements(object)  # S4 method for class 'TidySet,logical' nElements(object, all)"},{"path":"https://docs.ropensci.org/BaseSet/reference/elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Elements of the TidySet — elements","text":"object TidySet object. value Modification elements. logical value count elements just present.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/elements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Elements of the TidySet — elements","text":"data.frame information elements","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/elements.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Elements of the TidySet — elements","text":"elements(TidySet): Retrieve elements elements(TidySet) <- value: Modify elements nElements(object = TidySet, = missing): Return number elements nElements(object = TidySet, = logical): Return number elements","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/elements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Elements of the TidySet — elements","text":"","code":"TS <- tidySet(list(A = letters[1:5], B = letters[2:10])) elements(TS) #>    elements #> 1         a #> 2         b #> 3         c #> 4         d #> 5         e #> 6         f #> 7         g #> 8         h #> 9         i #> 10        j elements(TS) <- data.frame(elements = letters[10:1]) TS2 <- replace_elements(TS, data.frame(elements = letters[1:11])) nElements(TS) #> [1] 10 nElements(TS2) #> [1] 11"},{"path":"https://docs.ropensci.org/BaseSet/reference/extract-TidySet.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract — extract-TidySet","title":"Extract — extract-TidySet","text":"Operators acting TidySet extract replace parts. designed resemble basic operators.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/extract-TidySet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract — extract-TidySet","text":"","code":"# S4 method for class 'TidySet' x$name  # S4 method for class 'TidySet' x$name <- value  # S4 method for class 'TidySet' x[i, j, k, ..., drop = TRUE]  # S4 method for class 'TidySet' x[i, j, k, ...] <- value  # S4 method for class 'TidySet' x[[i, j, ..., exact = TRUE]]  # S4 method for class 'TidySet' x[[i]] <- value"},{"path":"https://docs.ropensci.org/BaseSet/reference/extract-TidySet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract — extract-TidySet","text":"x TidySet object. name data TidySet object extract. value value overwrite rows want keep? default . j slot want extract? One \"sets\", \"elements\" \"relations\". k columns want extract. default . ... arguments currently ignored. drop Remove remaining elements, sets relations? Passed arguments droplevels(). exact logical value. FALSE fuzzy matching wanted. Add values TidySet. Allows control slot added.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/extract-TidySet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract — extract-TidySet","text":"Always returns valid TidySet.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/extract-TidySet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract — extract-TidySet","text":"","code":"TS <- tidySet(list(A = letters[1:5], B = letters[6])) TS[, \"sets\", \"origin\"] <- sample(c(\"random\", \"non-random\"), 2, replace = TRUE) TS[, \"sets\", \"type\"] <- c(\"Fantastic\", \"Wonderful\") # This produces a warning # TS$description <- c(\"What\", \"can\", \"I\", \"say\", \"now\", \"?\") # Better to be explicit: TS[, \"relations\", \"description\"] <- c(\"What\", \"can\", \"I\", \"say\", \"now\", \"?\") relations(TS) #>   elements sets fuzzy description #> 1        a    A     1        What #> 2        b    A     1         can #> 3        c    A     1           I #> 4        d    A     1         say #> 5        e    A     1         now #> 6        f    B     1           ? TS[, \"elements\", \"description\"] <- rev(c(\"What\", \"can\", \"I\", \"say\", \"now\", \"?\")) elements(TS) #>   elements description #> 1        a           ? #> 2        b         now #> 3        c         say #> 4        d           I #> 5        e         can #> 6        f        What # Which will be deleted? # TS$description <- NULL TS$type #> [1] \"Fantastic\" \"Wonderful\" TS$origin <- c(\"BCN\", \"BDN\") # Different subsets TS[1, \"elements\"] #>   elements sets fuzzy description origin      type description.elements #> 1        a    A     1        What    BCN Fantastic                    ? TS[1, \"sets\"] #>   elements sets fuzzy description origin      type description.elements #> 1        a    A     1        What    BCN Fantastic                    ? #> 2        b    A     1         can    BCN Fantastic                  now #> 3        c    A     1           I    BCN Fantastic                  say #> 4        d    A     1         say    BCN Fantastic                    I #> 5        e    A     1         now    BCN Fantastic                  can # Always print TS #>   elements sets fuzzy description origin      type description.elements #> 1        a    A     1        What    BCN Fantastic                    ? #> 2        b    A     1         can    BCN Fantastic                  now #> 3        c    A     1           I    BCN Fantastic                  say #> 4        d    A     1         say    BCN Fantastic                    I #> 5        e    A     1         now    BCN Fantastic                  can #> 6        f    B     1           ?    BDN Wonderful                 What TS[, \"sets\", c(\"type\", \"origin\")] # Same #>   elements sets fuzzy description      type origin description.elements #> 1        a    A     1        What Fantastic    BCN                    ? #> 2        b    A     1         can Fantastic    BCN                  now #> 3        c    A     1           I Fantastic    BCN                  say #> 4        d    A     1         say Fantastic    BCN                    I #> 5        e    A     1         now Fantastic    BCN                  can #> 6        f    B     1           ? Wonderful    BDN                 What TS[, \"sets\", \"origin\"] # Drop column type #>   elements sets fuzzy description origin description.elements #> 1        a    A     1        What    BCN                    ? #> 2        b    A     1         can    BCN                  now #> 3        c    A     1           I    BCN                  say #> 4        d    A     1         say    BCN                    I #> 5        e    A     1         now    BCN                  can #> 6        f    B     1           ?    BDN                 What is(TS[, \"sets\", \"origin\"]) #> [1] \"TidySet\" TS[, \"sets\"] #>   elements sets fuzzy description origin      type description.elements #> 1        a    A     1        What    BCN Fantastic                    ? #> 2        b    A     1         can    BCN Fantastic                  now #> 3        c    A     1           I    BCN Fantastic                  say #> 4        d    A     1         say    BCN Fantastic                    I #> 5        e    A     1         now    BCN Fantastic                  can #> 6        f    B     1           ?    BDN Wonderful                 What TS[[\"A\"]] #>   elements sets fuzzy description origin      type description.elements #> 1        a    A     1        What    BCN Fantastic                    ? #> 2        b    A     1         can    BCN Fantastic                  now #> 3        c    A     1           I    BCN Fantastic                  say #> 4        d    A     1         say    BCN Fantastic                    I #> 5        e    A     1         now    BCN Fantastic                  can TS[[\"B\"]] #>   elements sets fuzzy description origin      type description.elements #> 1        f    B     1           ?    BDN Wonderful                 What TS[[\"C\"]] # Any other set is the empty set #> [1] elements             sets                 fuzzy                #> [4] description          origin               type                 #> [7] description.elements #> <0 rows> (or 0-length row.names)"},{"path":"https://docs.ropensci.org/BaseSet/reference/fapply.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply to fuzzy — fapply","title":"Apply to fuzzy — fapply","text":"Simplify returns unique results object.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/fapply.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply to fuzzy — fapply","text":"","code":"fapply(relations, FUN, ...)"},{"path":"https://docs.ropensci.org/BaseSet/reference/fapply.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply to fuzzy — fapply","text":"relations data.frame similar fuzzy, sets elements columns. FUN function perform fuzzy numbers. ... named arguments passed FUN.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/fapply.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply to fuzzy — fapply","text":"modified TidySet object","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/filter_.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter TidySet — filter.TidySet","title":"Filter TidySet — filter.TidySet","text":"Use filter subset TidySet object. can use activate filter use specific function. S3 method filters using information TidySet.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/filter_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter TidySet — filter.TidySet","text":"","code":"# S3 method for class 'TidySet' filter(.data, ...)  filter_set(.data, ...)  filter_element(.data, ...)  filter_relation(.data, ...)"},{"path":"https://docs.ropensci.org/BaseSet/reference/filter_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter TidySet — filter.TidySet","text":".data TidySet object. ... logical predicates terms variables sets.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/filter_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter TidySet — filter.TidySet","text":"TidySet object.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/filter_.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter TidySet — filter.TidySet","text":"","code":"relations <- data.frame(     sets = c(rep(\"a\", 5), \"b\", rep(\"a2\", 5), \"b2\"),     elements = rep(letters[seq_len(6)], 2),     fuzzy = runif(12),     type = c(rep(\"Gene\", 4), rep(\"lncRNA\", 2)) ) TS <- tidySet(relations) TS <- move_to(TS, from = \"relations\", to = \"elements\", column = \"type\") filter(TS, elements == \"a\") #>   elements sets     fuzzy type #> 1        a    a 0.4007202 Gene #> 2        a   a2 0.5185566 Gene # Equivalent to filter_relation filter(TS, elements == \"a\", sets == \"a\") #>   elements sets     fuzzy type #> 1        a    a 0.4007202 Gene filter_relation(TS, elements == \"a\", sets == \"a\") #>   elements sets     fuzzy type #> 1        a    a 0.4007202 Gene # Filter element filter_element(TS, type == \"Gene\") #>   elements sets      fuzzy type #> 1        a    a 0.40072018 Gene #> 2        b    a 0.21317271 Gene #> 3        c    a 0.67176682 Gene #> 4        d    a 0.05861411 Gene #> 5        a   a2 0.51855664 Gene #> 6        b   a2 0.84612005 Gene #> 7        c   a2 0.71826972 Gene #> 8        d   a2 0.24131402 Gene # Filter sets and by property of elements simultaneously filter(TS, sets == \"b\", type == \"lncRNA\") #>   elements sets     fuzzy   type #> 1        f    b 0.1490355 lncRNA # Filter sets filter_set(TS, sets == \"b\") #>   elements sets     fuzzy   type #> 1        f    b 0.1490355 lncRNA"},{"path":"https://docs.ropensci.org/BaseSet/reference/getGAF.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a GAF file — getGAF","title":"Read a GAF file — getGAF","text":"Read GO Annotation File (GAF) formatted file","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/getGAF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a GAF file — getGAF","text":"","code":"getGAF(x)"},{"path":"https://docs.ropensci.org/BaseSet/reference/getGAF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a GAF file — getGAF","text":"x file GAF format","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/getGAF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a GAF file — getGAF","text":"TidySet object","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/getGAF.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read a GAF file — getGAF","text":"format defined .","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/getGAF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a GAF file — getGAF","text":"","code":"gafFile <- system.file(     package = \"BaseSet\", \"extdata\",     \"go_human_rna_valid_subset.gaf\" ) gs <- getGAF(gafFile) head(gs) #>             elements       sets         DB       DB_Object_ID Evidence_Code #> 1 URS0000001346_9606 GO:0006412 RNAcentral URS0000001346_9606           IEA #> 2 URS0000001346_9606 GO:0030533 RNAcentral URS0000001346_9606           IEA #> 3 URS000000192A_9606 GO:0016442 RNAcentral URS000000192A_9606           IEA #> 4 URS000000192A_9606 GO:0035195 RNAcentral URS000000192A_9606           IEA #> 5 URS00000019BC_9606 GO:0000244 RNAcentral URS00000019BC_9606           IEA #> 6 URS00000019BC_9606 GO:0000353 RNAcentral URS00000019BC_9606           IEA #>      With_From                                         DB_Object_Name #> 1   GO:0030533                          Homo sapiens (human) tRNA-Lys #> 2 Rfam:RF00005                          Homo sapiens (human) tRNA-Lys #> 3 Rfam:RF00951 Homo sapiens (human) MIR1302-2 host gene (MIR1302-2HG) #> 4 Rfam:RF00951 Homo sapiens (human) MIR1302-2 host gene (MIR1302-2HG) #> 5 Rfam:RF00026                  Homo sapiens (human) snRNA-U6-related #> 6 Rfam:RF00026                  Homo sapiens (human) snRNA-U6-related #>   DB_Object_Type      Taxon     Date Assigned_By fuzzy   DB_Reference Aspect #> 1           tRNA taxon:9606 20190601         GOC     1 GO_REF:0000108     BP #> 2           tRNA taxon:9606 20190601  RNAcentral     1 GO_REF:0000115     MF #> 3        lnc_RNA taxon:9606 20190601  RNAcentral     1 GO_REF:0000115     CC #> 4        lnc_RNA taxon:9606 20190601  RNAcentral     1 GO_REF:0000115     BP #> 5          snRNA taxon:9606 20190601  RNAcentral     1 GO_REF:0000115     BP #> 6          snRNA taxon:9606 20190601  RNAcentral     1 GO_REF:0000115     BP"},{"path":"https://docs.ropensci.org/BaseSet/reference/getGMT.html","id":null,"dir":"Reference","previous_headings":"","what":"Import GMT (Gene Matrix Transposed) files — getGMT","title":"Import GMT (Gene Matrix Transposed) files — getGMT","text":"GMT (Gene Matrix Transposed) file format tab delimited file format describes groups genes. format, row represents group. group described name, description, genes .","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/getGMT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import GMT (Gene Matrix Transposed) files — getGMT","text":"","code":"getGMT(con, sep = \"\\t\", ...)"},{"path":"https://docs.ropensci.org/BaseSet/reference/getGMT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import GMT (Gene Matrix Transposed) files — getGMT","text":"con File name GMT file. sep GMT file field separator, default tabs. ... arguments passed readLines.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/getGMT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import GMT (Gene Matrix Transposed) files — getGMT","text":"TidySet object.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/getGMT.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Import GMT (Gene Matrix Transposed) files — getGMT","text":"file format defined Broad Institute ","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/getGMT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import GMT (Gene Matrix Transposed) files — getGMT","text":"","code":"gmtFile <- system.file(     package = \"BaseSet\", \"extdata\",     \"hallmark.gene.symbol.gmt\" ) gs <- getGMT(gmtFile) nRelations(gs) #> [1] 7324 nElements(gs) #> [1] 4386 nSets(gs) #> [1] 50"},{"path":"https://docs.ropensci.org/BaseSet/reference/getOBO.html","id":null,"dir":"Reference","previous_headings":"","what":"Read an OBO file — getOBO","title":"Read an OBO file — getOBO","text":"Read Open Biological Biomedical Ontologies (OBO) formatted file","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/getOBO.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read an OBO file — getOBO","text":"","code":"getOBO(x)"},{"path":"https://docs.ropensci.org/BaseSet/reference/getOBO.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read an OBO file — getOBO","text":"x Path file OBO format.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/getOBO.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read an OBO file — getOBO","text":"TidySet object.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/getOBO.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read an OBO file — getOBO","text":"format described ","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/getOBO.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read an OBO file — getOBO","text":"","code":"oboFile <- system.file(     package = \"BaseSet\", \"extdata\",     \"go-basic_subset.obo\" ) gs <- getOBO(oboFile) head(gs) #>     elements       sets                             name          namespace #> 1 GO:0000001 GO:0048308        mitochondrion inheritance biological_process #> 2 GO:0000001 GO:0048311        mitochondrion inheritance biological_process #> 3 GO:0000002 GO:0007005 mitochondrial genome maintenance biological_process #> 4 GO:0000003 GO:0008150                     reproduction biological_process #> 5 GO:0000003 GO:0008150                     reproduction biological_process #> 6 GO:0000003 GO:0008150                     reproduction biological_process #>                                                                                                                                                                                                                                 def #> 1 \"The distribution of mitochondria, including the mitochondrial genome, into daughter cells after mitosis or meiosis, mediated by interactions between mitochondria and the cytoskeleton.\" [GOC:mcc, PMID:10873824, PMID:11389764] #> 2 \"The distribution of mitochondria, including the mitochondrial genome, into daughter cells after mitosis or meiosis, mediated by interactions between mitochondria and the cytoskeleton.\" [GOC:mcc, PMID:10873824, PMID:11389764] #> 3                                                              \"The maintenance of the structure and integrity of the mitochondrial genome; includes replication and segregation of the mitochondrial chromosome.\" [GOC:ai, GOC:vw] #> 4                                       \"The production of new individuals that contain some portion of genetic material inherited from one or more parent organisms.\" [GOC:go_curators, GOC:isa_complete, GOC:jl, ISBN:0198506732] #> 5                                       \"The production of new individuals that contain some portion of genetic material inherited from one or more parent organisms.\" [GOC:go_curators, GOC:isa_complete, GOC:jl, ISBN:0198506732] #> 6                                       \"The production of new individuals that contain some portion of genetic material inherited from one or more parent organisms.\" [GOC:go_curators, GOC:isa_complete, GOC:jl, ISBN:0198506732] #>                                         synonym     alt_id     subset comment #> 1          \"mitochondrial inheritance\" EXACT []       <NA>       <NA>    <NA> #> 2          \"mitochondrial inheritance\" EXACT []       <NA>       <NA>    <NA> #> 3                                          <NA>       <NA>       <NA>    <NA> #> 4 \"reproductive physiological process\" EXACT [] GO:0019952 goslim_agr    <NA> #> 5 \"reproductive physiological process\" EXACT [] GO:0019952 goslim_agr    <NA> #> 6 \"reproductive physiological process\" EXACT [] GO:0019952 goslim_agr    <NA> #>   consider relationship                   set_name ref_origin     ref_code #> 1     <NA>         <NA>      organelle inheritance       <NA>         <NA> #> 2     <NA>         <NA> mitochondrion distribution       <NA>         <NA> #> 3     <NA>         <NA> mitochondrion organization       <NA>         <NA> #> 4     <NA>         <NA>         biological_process  Wikipedia Reproduction #> 5     <NA>         <NA>         biological_process  Wikipedia Reproduction #> 6     <NA>         <NA>         biological_process  Wikipedia Reproduction #>   fuzzy #> 1     1 #> 2     1 #> 3     1 #> 4     1 #> 5     1 #> 6     1"},{"path":"https://docs.ropensci.org/BaseSet/reference/group.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new set from existing elements — group","title":"Create a new set from existing elements — group","text":"allows create new set given condition. element meet condition empty set created.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new set from existing elements — group","text":"","code":"group(object, name, ...)  # S3 method for class 'TidySet' group(object, name, ...)"},{"path":"https://docs.ropensci.org/BaseSet/reference/group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new set from existing elements — group","text":"object TidySet object. name name new set. ... logical condition subset elements.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new set from existing elements — group","text":"TidySet object new set.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new set from existing elements — group","text":"","code":"x <- list(\"A\" = c(\"a\" = 0.1, \"b\" = 0.5), \"B\" = c(\"a\" = 0.2, \"b\" = 1)) TS <- tidySet(x) TS1 <- group(TS, \"C\", fuzzy < 0.5) TS1 #>   elements sets fuzzy #> 1        a    A   0.1 #> 2        b    A   0.5 #> 3        a    B   0.2 #> 4        b    B   1.0 #> 5        a    C   1.0 sets(TS1) #>   sets #> 1    A #> 2    B #> 3    C TS2 <- group(TS, \"D\", fuzzy < 0) sets(TS2) #>   sets #> 1    A #> 2    B #> 3    D r <- data.frame(     sets = c(rep(\"A\", 5), \"B\", rep(\"A2\", 5), \"B2\"),     elements = rep(letters[seq_len(6)], 2),     fuzzy = runif(12),     type = c(rep(\"Gene\", 2), rep(\"Protein\", 2), rep(\"lncRNA\", 2)) ) TS3 <- tidySet(r) group(TS3, \"D\", sets %in% c(\"A\", \"A2\")) #>    elements sets      fuzzy    type #> 1         a    A 0.02795603    Gene #> 2         b    A 0.46938430    Gene #> 3         c    A 0.80568003 Protein #> 4         d    A 0.81405131 Protein #> 5         e    A 0.40391100  lncRNA #> 6         f    B 0.21843101  lncRNA #> 7         a   A2 0.41836140    Gene #> 8         b   A2 0.66887075    Gene #> 9         c   A2 0.50765028 Protein #> 10        d   A2 0.66035931 Protein #> 11        e   A2 0.51179131  lncRNA #> 12        f   B2 0.83555244  lncRNA #> 13        a    D 1.00000000    <NA> #> 14        b    D 1.00000000    <NA> #> 15        c    D 1.00000000    <NA> #> 16        d    D 1.00000000    <NA> #> 17        e    D 1.00000000    <NA>"},{"path":"https://docs.ropensci.org/BaseSet/reference/group_by_.html","id":null,"dir":"Reference","previous_headings":"","what":"group_by TidySet — group_by.TidySet","title":"group_by TidySet — group_by.TidySet","text":"Use group_by group TidySet object. can use activate group_by whole data.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/group_by_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"group_by TidySet — group_by.TidySet","text":"","code":"# S3 method for class 'TidySet' group_by(.data, ...)"},{"path":"https://docs.ropensci.org/BaseSet/reference/group_by_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"group_by TidySet — group_by.TidySet","text":".data TidySet object ... logical predicates terms variables sets","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/group_by_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"group_by TidySet — group_by.TidySet","text":"grouped data.frame (See dplyr help page)","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/group_by_.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"group_by TidySet — group_by.TidySet","text":"","code":"relations <- data.frame(     sets = c(rep(\"a\", 5), \"b\", rep(\"a2\", 5), \"b2\"),     elements = rep(letters[seq_len(6)], 2),     fuzzy = runif(12) ) a <- tidySet(relations) elements(a) <- cbind(elements(a),     type = c(rep(\"Gene\", 4), rep(\"lncRNA\", 2)) ) group_by(a, elements) #> # A tibble: 12 × 4 #> # Groups:   elements [6] #>    elements sets   fuzzy type   #>    <chr>    <chr>  <dbl> <chr>  #>  1 a        a     0.709  Gene   #>  2 b        a     0.874  Gene   #>  3 c        a     0.0115 Gene   #>  4 d        a     0.888  Gene   #>  5 e        a     0.996  lncRNA #>  6 f        b     0.500  lncRNA #>  7 a        a2    0.359  Gene   #>  8 b        a2    0.775  Gene   #>  9 c        a2    0.584  Gene   #> 10 d        a2    0.634  Gene   #> 11 e        a2    0.859  lncRNA #> 12 f        b2    0.567  lncRNA"},{"path":"https://docs.ropensci.org/BaseSet/reference/incidence.html","id":null,"dir":"Reference","previous_headings":"","what":"Incidence — incidence","title":"Incidence — incidence","text":"Check elements sets.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/incidence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Incidence — incidence","text":"","code":"incidence(object)  # S4 method for class 'TidySet' incidence(object)"},{"path":"https://docs.ropensci.org/BaseSet/reference/incidence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Incidence — incidence","text":"object Object coerced tested.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/incidence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Incidence — incidence","text":"matrix elements rows sets columns values indicate relationship element set.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/incidence.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Incidence — incidence","text":"incidence(TidySet): Incidence TidySet","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/incidence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Incidence — incidence","text":"","code":"x <- list(\"a\" = letters[1:5], \"b\" = LETTERS[3:7]) a <- tidySet(x) incidence(a) #>   a b #> a 1 0 #> b 1 0 #> c 1 0 #> d 1 0 #> e 1 0 #> C 0 1 #> D 0 1 #> E 0 1 #> F 0 1 #> G 0 1"},{"path":"https://docs.ropensci.org/BaseSet/reference/independent.html","id":null,"dir":"Reference","previous_headings":"","what":"Independence of the sets — independent","title":"Independence of the sets — independent","text":"Checks elements sets present one set.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/independent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Independence of the sets — independent","text":"","code":"independent(object, sets)"},{"path":"https://docs.ropensci.org/BaseSet/reference/independent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Independence of the sets — independent","text":"object TidySet object. sets character vector names sets analyze.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/independent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Independence of the sets — independent","text":"logical value indicating sets independent (TRUE) .","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/independent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Independence of the sets — independent","text":"","code":"x <- list(\"A\" = letters[1:5], \"B\" = letters[3:7], \"C\" = letters[6:10]) TS <- tidySet(x) independent(TS) #> [1] FALSE independent(TS, c(\"A\", \"B\")) #> [1] FALSE independent(TS, c(\"A\", \"C\")) #> [1] TRUE independent(TS, c(\"B\", \"C\")) #> [1] FALSE"},{"path":"https://docs.ropensci.org/BaseSet/reference/intersection.html","id":null,"dir":"Reference","previous_headings":"","what":"Intersection of two or more sets — intersection","title":"Intersection of two or more sets — intersection","text":"Given TidySet creates new set elements following logic defined FUN.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/intersection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Intersection of two or more sets — intersection","text":"","code":"intersection(object, sets, ...)  # S4 method for class 'TidySet,character' intersection(   object,   sets,   name = NULL,   FUN = \"min\",   keep = FALSE,   keep_relations = keep,   keep_elements = keep,   keep_sets = keep,   ... )"},{"path":"https://docs.ropensci.org/BaseSet/reference/intersection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Intersection of two or more sets — intersection","text":"object TidySet object. sets character sets intersect. ... named arguments passed FUN. name name new set. defaults joins sets ∪. FUN function applied performing union. standard intersection \"min\" function, can provide function given numeric vector returns single number. keep logical value want keep originals sets. keep_relations logical value wan keep old relations. keep_elements logical value wan keep old elements. keep_sets logical value wan keep old sets.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/intersection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Intersection of two or more sets — intersection","text":"TidySet object.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/intersection.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Intersection of two or more sets — intersection","text":"#' default uses min function following standard fuzzy definition, can changed.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/intersection.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Intersection of two or more sets — intersection","text":"intersection(object = TidySet, sets = character): Applies standard intersection","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/intersection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Intersection of two or more sets — intersection","text":"","code":"rel <- data.frame(     sets = c(rep(\"A\", 5), \"B\"),     elements = c(\"a\", \"b\", \"c\", \"d\", \"f\", \"f\") ) TS <- tidySet(rel) intersection(TS, c(\"A\", \"B\")) # Default Name #>   elements sets fuzzy #> 1        f  A∩B     1 intersection(TS, c(\"A\", \"B\"), \"C\") # Set the name #>   elements sets fuzzy #> 1        f    C     1 # Fuzzy set rel <- data.frame(     sets = c(rep(\"A\", 5), \"B\"),     elements = c(\"a\", \"b\", \"c\", \"d\", \"f\", \"f\"),     fuzzy = runif(6) ) TS2 <- tidySet(rel) intersection(TS2, c(\"A\", \"B\"), \"C\") #>   elements sets     fuzzy #> 1        f    C 0.4028812 intersection(TS2, c(\"A\", \"B\"), \"C\", FUN = function(x){max(sqrt(x))}) #>   elements sets     fuzzy #> 1        f    C 0.8772857"},{"path":"https://docs.ropensci.org/BaseSet/reference/is.fuzzy.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a TidySet is fuzzy. — is.fuzzy","title":"Check if a TidySet is fuzzy. — is.fuzzy","text":"Check fuzzy sets. fuzzy set set relationship elements given probability (uncertainty).","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/is.fuzzy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a TidySet is fuzzy. — is.fuzzy","text":"","code":"is.fuzzy(object)  # S4 method for class 'TidySet' is.fuzzy(object)"},{"path":"https://docs.ropensci.org/BaseSet/reference/is.fuzzy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a TidySet is fuzzy. — is.fuzzy","text":"object Object coerced tested.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/is.fuzzy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a TidySet is fuzzy. — is.fuzzy","text":"logical value.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/is.fuzzy.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Check if a TidySet is fuzzy. — is.fuzzy","text":".fuzzy(TidySet): Check fuzzy","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/is.fuzzy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a TidySet is fuzzy. — is.fuzzy","text":"","code":"TS <- tidySet(list(A = letters[1:5], B = letters[2:10])) is.fuzzy(TS) #> [1] FALSE"},{"path":"https://docs.ropensci.org/BaseSet/reference/is_nested.html","id":null,"dir":"Reference","previous_headings":"","what":"Are some sets as elements of other sets? — is_nested","title":"Are some sets as elements of other sets? — is_nested","text":"Check elements also sets others. also known hierarchical sets.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/is_nested.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Are some sets as elements of other sets? — is_nested","text":"","code":"is_nested(object)  # S3 method for class 'TidySet' is_nested(object)"},{"path":"https://docs.ropensci.org/BaseSet/reference/is_nested.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Are some sets as elements of other sets? — is_nested","text":"object TidySet object.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/is_nested.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Are some sets as elements of other sets? — is_nested","text":"logical value: TRUE sets included elements others.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/is_nested.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Are some sets as elements of other sets? — is_nested","text":"","code":"relations <- list(A = letters[1:3], B = c(letters[4:5])) TS <- tidySet(relations) is_nested(TS) #> [1] FALSE TS2 <- add_relation(TS, data.frame(elements = \"A\", sets = \"B\")) # Note that A is both a set and an element of B TS2 #>   elements sets fuzzy #> 1        a    A     1 #> 2        b    A     1 #> 3        c    A     1 #> 4        d    B     1 #> 5        e    B     1 #> 6        A    B     1 is_nested(TS2) #> [1] TRUE"},{"path":"https://docs.ropensci.org/BaseSet/reference/length.TidySet.html","id":null,"dir":"Reference","previous_headings":"","what":"Length of the TidySet — length.TidySet","title":"Length of the TidySet — length.TidySet","text":"Returns number sets object.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/length.TidySet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Length of the TidySet — length.TidySet","text":"","code":"# S3 method for class 'TidySet' length(x)"},{"path":"https://docs.ropensci.org/BaseSet/reference/length.TidySet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Length of the TidySet — length.TidySet","text":"x TidySet object. replacement function available, either delete sets add .","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/length.TidySet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Length of the TidySet — length.TidySet","text":"numeric value.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/length.TidySet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Length of the TidySet — length.TidySet","text":"","code":"TS <- tidySet(list(A = letters[1:5], B = letters[6])) length(TS) #> [1] 2"},{"path":"https://docs.ropensci.org/BaseSet/reference/length_probability.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the probability of a single length — union_probability","title":"Calculates the probability of a single length — union_probability","text":"Creates possibilities add . union_probability Assumes independence probabilities calculate final size.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/length_probability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the probability of a single length — union_probability","text":"","code":"union_probability(p)  length_probability(p, size)"},{"path":"https://docs.ropensci.org/BaseSet/reference/length_probability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the probability of a single length — union_probability","text":"p Numeric vector probabilities. size Integer value size selected values.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/length_probability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the probability of a single length — union_probability","text":"numeric value probability given size.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/length_probability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the probability of a single length — union_probability","text":"","code":"length_probability(c(0.5, 0.75), 2) #> [1] 0.375 length_probability(c(0.5, 0.75, 0.66), 1) #> [1] 0.2525 length_probability(c(0.5, 0.1, 0.3, 0.5, 0.25, 0.23), 2) #> [1] 0.3485187 union_probability(c(0.5, 0.1, 0.3)) #> [1] 0.685"},{"path":"https://docs.ropensci.org/BaseSet/reference/length_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the probability — length_set","title":"Calculates the probability — length_set","text":"Given several probabilities looks probable vector length","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/length_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the probability — length_set","text":"","code":"length_set(probability)"},{"path":"https://docs.ropensci.org/BaseSet/reference/length_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the probability — length_set","text":"probability numeric vector probabilities.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/length_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the probability — length_set","text":"vector probability set.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/length_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the probability — length_set","text":"","code":"length_set(c(0.5, 0.1, 0.3, 0.5, 0.25, 0.23)) #>          0          1          2          3          4          5          6  #> 0.09095625 0.28848750 0.34851875 0.20302500 0.06009375 0.00848750 0.00043125"},{"path":"https://docs.ropensci.org/BaseSet/reference/lengths-TidySet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Lengths of the TidySet — lengths,TidySet-method","title":"Lengths of the TidySet — lengths,TidySet-method","text":"Returns number relations set object.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/lengths-TidySet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lengths of the TidySet — lengths,TidySet-method","text":"","code":"# S4 method for class 'TidySet' lengths(x, use.names = TRUE)"},{"path":"https://docs.ropensci.org/BaseSet/reference/lengths-TidySet-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lengths of the TidySet — lengths,TidySet-method","text":"x TidySet object. use.names logical value whether inherit names .","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/lengths-TidySet-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lengths of the TidySet — lengths,TidySet-method","text":"vector number different relations set.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/lengths-TidySet-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lengths of the TidySet — lengths,TidySet-method","text":"","code":"TS <- tidySet(list(A = letters[1:5], B = letters[6])) lengths(TS) #> A B  #> 5 1"},{"path":"https://docs.ropensci.org/BaseSet/reference/move_to.html","id":null,"dir":"Reference","previous_headings":"","what":"Move columns between slots — move_to","title":"Move columns between slots — move_to","text":"Moves information one slot slots. instance sets relations.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/move_to.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move columns between slots — move_to","text":"","code":"move_to(object, from, to, columns)  # S4 method for class 'TidySet,characterORfactor,characterORfactor,character' move_to(object, from, to, columns)"},{"path":"https://docs.ropensci.org/BaseSet/reference/move_to.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move columns between slots — move_to","text":"object TidySet object. name slot content . name slot move content. columns name columns moved.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/move_to.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Move columns between slots — move_to","text":"TidySet object content moved one slot .","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/move_to.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Move columns between slots — move_to","text":"move_to(   object = TidySet,   = characterORfactor,   = characterORfactor,   columns = character ): Move columns","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/move_to.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Move columns between slots — move_to","text":"","code":"x <- list(\"A\" = c(\"a\" = 0.1, \"b\" = 0.5), \"B\" = c(\"a\" = 0.2, \"b\" = 1)) TS <- tidySet(x) TS <- mutate_element(TS, b = runif(2)) TS2 <- move_to(TS, from = \"elements\", to = \"relations\", \"b\") # Note that apparently we haven't changed anything: TS2 #>   elements sets fuzzy         b #> 1        a    A   0.1 0.1194854 #> 2        b    A   0.5 0.1946950 #> 3        a    B   0.2 0.1194854 #> 4        b    B   1.0 0.1946950"},{"path":"https://docs.ropensci.org/BaseSet/reference/multiply_probabilities.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability of a vector of probabilities — multiply_probabilities","title":"Probability of a vector of probabilities — multiply_probabilities","text":"Calculates probability probabilities happened simultaneously. independent_probabilities() just multiply probabilities index passed.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/multiply_probabilities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability of a vector of probabilities — multiply_probabilities","text":"","code":"multiply_probabilities(p, i)  independent_probabilities(p, i)"},{"path":"https://docs.ropensci.org/BaseSet/reference/multiply_probabilities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability of a vector of probabilities — multiply_probabilities","text":"p Numeric vector probabilities. Numeric integer index complementary probability.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/multiply_probabilities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability of a vector of probabilities — multiply_probabilities","text":"numeric value probability.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/multiply_probabilities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability of a vector of probabilities — multiply_probabilities","text":"","code":"multiply_probabilities(c(0.5, 0.1, 0.3, 0.5, 0.25, 0.23), c(1, 3)) #> [1] 0.03898125 independent_probabilities(c(0.5, 0.1, 0.3, 0.5, 0.25, 0.23), c(1, 3)) #> [1] 0.15"},{"path":"https://docs.ropensci.org/BaseSet/reference/mutate_.html","id":null,"dir":"Reference","previous_headings":"","what":"Mutate — mutate.TidySet","title":"Mutate — mutate.TidySet","text":"Use mutate alter TidySet object. can use activate mutate use specific function. S3 method filters using information TidySet.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/mutate_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mutate — mutate.TidySet","text":"","code":"# S3 method for class 'TidySet' mutate(.data, ...)  mutate_set(.data, ...)  mutate_element(.data, ...)  mutate_relation(.data, ...)"},{"path":"https://docs.ropensci.org/BaseSet/reference/mutate_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mutate — mutate.TidySet","text":".data TidySet object. ... logical predicates terms variables sets.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/mutate_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mutate — mutate.TidySet","text":"TidySet object","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/mutate_.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mutate — mutate.TidySet","text":"","code":"relations <- data.frame(     sets = c(rep(\"a\", 5), \"b\", rep(\"a2\", 5), \"b2\"),     elements = rep(letters[seq_len(6)], 2),     fuzzy = runif(12) ) a <- tidySet(relations) a <- mutate_element(a, Type = c(rep(\"Gene\", 4), rep(\"lncRNA\", 2))) a #>    elements sets      fuzzy   Type #> 1         a    a 0.16456925   Gene #> 2         b    a 0.66320658   Gene #> 3         c    a 0.85657500   Gene #> 4         d    a 0.92654645   Gene #> 5         e    a 0.55237759 lncRNA #> 6         f    b 0.57706569 lncRNA #> 7         a   a2 0.68744775   Gene #> 8         b   a2 0.24471823   Gene #> 9         c   a2 0.04461716   Gene #> 10        d   a2 0.90985456   Gene #> 11        e   a2 0.07068122 lncRNA #> 12        f   b2 0.99689147 lncRNA b <- mutate_relation(a, Type = sample(c(\"PPI\", \"PF\", \"MP\"), 12,     replace = TRUE ))"},{"path":"https://docs.ropensci.org/BaseSet/reference/nElements.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of elements — nElements","title":"Number of elements — nElements","text":"Check number elements TidySet.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/nElements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of elements — nElements","text":"","code":"nElements(object, all)"},{"path":"https://docs.ropensci.org/BaseSet/reference/nElements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of elements — nElements","text":"object Object coerced tested. Logical value count elements.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/nElements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of elements — nElements","text":"numeric value number elements.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/nElements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of elements — nElements","text":"","code":"TS <- tidySet(list(A = letters[1:2], B = letters[5:7])) nElements(TS) #> [1] 5"},{"path":"https://docs.ropensci.org/BaseSet/reference/nRelations.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of relations — nRelations","title":"Number of relations — nRelations","text":"Check number relations TidySet.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/nRelations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of relations — nRelations","text":"","code":"nRelations(object)"},{"path":"https://docs.ropensci.org/BaseSet/reference/nRelations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of relations — nRelations","text":"object Object coerced tested.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/nRelations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of relations — nRelations","text":"numeric value number relations.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/nRelations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of relations — nRelations","text":"","code":"TS <- tidySet(list(A = letters[1:2], B = letters[5:7])) nRelations(TS) #> [1] 5"},{"path":"https://docs.ropensci.org/BaseSet/reference/nSets.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of sets — nSets","title":"Number of sets — nSets","text":"Check number sets TidySet","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/nSets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of sets — nSets","text":"","code":"nSets(object, all)"},{"path":"https://docs.ropensci.org/BaseSet/reference/nSets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of sets — nSets","text":"object Object coerced tested. Logical value count sets.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/nSets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of sets — nSets","text":"number sets present.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/nSets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of sets — nSets","text":"","code":"TS <- tidySet(list(A = letters[1:2], B = letters[5:7])) nSets(TS) #> [1] 2"},{"path":"https://docs.ropensci.org/BaseSet/reference/name_elements-set.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename elements — name_elements<-","title":"Rename elements — name_elements<-","text":"Rename elements.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/name_elements-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename elements — name_elements<-","text":"","code":"name_elements(object, all, ...) <- value"},{"path":"https://docs.ropensci.org/BaseSet/reference/name_elements-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename elements — name_elements<-","text":"object TidySet object. logical value whether return elements just present. ... arguments passed methods. value character new names elements.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/name_elements-set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename elements — name_elements<-","text":"TidySet object.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/name_elements-set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename elements — name_elements<-","text":"","code":"relations <- data.frame(     sets = c(rep(\"A\", 5), \"B\"),     elements = letters[seq_len(6)],     fuzzy = runif(6) ) TS <- tidySet(relations) TS #>   elements sets     fuzzy #> 1        a    A 0.4640136 #> 2        b    A 0.9176605 #> 3        c    A 0.9728442 #> 4        d    A 0.8190824 #> 5        e    A 0.9029238 #> 6        f    B 0.5813660 name_elements(TS) <- letters[1:6]"},{"path":"https://docs.ropensci.org/BaseSet/reference/name_elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Name elements — name_elements","title":"Name elements — name_elements","text":"Retrieve name elements.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/name_elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Name elements — name_elements","text":"","code":"name_elements(object, all, ...)  # S4 method for class 'TidySet,logical' name_elements(object, all = TRUE)  # S4 method for class 'TidySet,missing' name_elements(object, all)  # S4 method for class 'TidySet,logical,characterORfactor' name_elements(object, all) <- value  # S4 method for class 'TidySet,missing,characterORfactor' name_elements(object) <- value"},{"path":"https://docs.ropensci.org/BaseSet/reference/name_elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Name elements — name_elements","text":"object TidySet object. logical value elements reported present. ... arguments passed methods. value character new names elements.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/name_elements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Name elements — name_elements","text":"TidySet object.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/name_elements.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Name elements — name_elements","text":"name_elements(object = TidySet, = logical): Name elements name_elements(object = TidySet, = missing): Name elements name_elements(object = TidySet, = logical) <- value: Rename elements name_elements(object = TidySet, = missing) <- value: Rename elements","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/name_elements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Name elements — name_elements","text":"","code":"relations <- data.frame(     sets = c(rep(\"A\", 5), \"B\"),     elements = letters[seq_len(6)],     fuzzy = runif(6) ) TS <- tidySet(relations) name_elements(TS) #> [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\""},{"path":"https://docs.ropensci.org/BaseSet/reference/name_sets-set.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename sets — name_sets<-","title":"Rename sets — name_sets<-","text":"Rename sets.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/name_sets-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename sets — name_sets<-","text":"","code":"name_sets(object, all, ...) <- value"},{"path":"https://docs.ropensci.org/BaseSet/reference/name_sets-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename sets — name_sets<-","text":"object TidySet object. logical value whether return sets present. ... arguments passed methods. value character new names sets.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/name_sets-set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename sets — name_sets<-","text":"TidySet object.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/name_sets-set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename sets — name_sets<-","text":"","code":"relations <- data.frame(     sets = c(rep(\"a\", 5), \"b\"),     elements = letters[seq_len(6)],     fuzzy = runif(6) ) TS <- tidySet(relations) TS #>   elements sets       fuzzy #> 1        a    a 0.866615703 #> 2        b    a 0.238453106 #> 3        c    a 0.004496308 #> 4        d    a 0.943516464 #> 5        e    a 0.438137200 #> 6        f    b 0.750603328 name_sets(TS) <- LETTERS[1:2]"},{"path":"https://docs.ropensci.org/BaseSet/reference/name_sets.html","id":null,"dir":"Reference","previous_headings":"","what":"Name sets — name_sets","title":"Name sets — name_sets","text":"Retrieve name sets.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/name_sets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Name sets — name_sets","text":"","code":"name_sets(object, all, ...)  # S4 method for class 'TidySet,logical' name_sets(object, all = TRUE)  # S4 method for class 'TidySet,missing' name_sets(object, all)  # S4 method for class 'TidySet,logical,characterORfactor' name_sets(object, all) <- value  # S4 method for class 'TidySet,missing,characterORfactor' name_sets(object, all) <- value"},{"path":"https://docs.ropensci.org/BaseSet/reference/name_sets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Name sets — name_sets","text":"object TidySet object. logical value sets reported present. ... arguments passed methods. value character new names sets.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/name_sets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Name sets — name_sets","text":"TidySet object.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/name_sets.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Name sets — name_sets","text":"name_sets(object = TidySet, = logical): Name sets name_sets(object = TidySet, = missing): Name sets name_sets(object = TidySet, = logical) <- value: Rename sets name_sets(object = TidySet, = missing) <- value: Rename sets","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/name_sets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Name sets — name_sets","text":"","code":"relations <- data.frame(     sets = c(rep(\"A\", 5), \"B\"),     elements = letters[seq_len(6)],     fuzzy = runif(6) ) TS <- tidySet(relations) name_sets(TS) #> [1] \"A\" \"B\""},{"path":"https://docs.ropensci.org/BaseSet/reference/names.TidySet.html","id":null,"dir":"Reference","previous_headings":"","what":"Names of a TidySet — names.TidySet","title":"Names of a TidySet — names.TidySet","text":"Retrieve column names slots TidySet.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/names.TidySet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Names of a TidySet — names.TidySet","text":"","code":"# S3 method for class 'TidySet' names(x)"},{"path":"https://docs.ropensci.org/BaseSet/reference/names.TidySet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Names of a TidySet — names.TidySet","text":"x TidySet object.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/names.TidySet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Names of a TidySet — names.TidySet","text":"vector names present columns sets, elements relations. slot active returns names slot.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/names.TidySet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Names of a TidySet — names.TidySet","text":"","code":"relations <- data.frame(     sets = c(rep(\"a\", 5), \"b\"),     elements = letters[seq_len(6)],     fuzzy = runif(6) ) TS <- tidySet(relations) names(TS) #> [1] \"sets\"     \"elements\" \"fuzzy\"    names(activate(TS, \"sets\")) #> [1] \"sets\""},{"path":"https://docs.ropensci.org/BaseSet/reference/naming.html","id":null,"dir":"Reference","previous_headings":"","what":"Name an operation — naming","title":"Name an operation — naming","text":"Helps setting name operation.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/naming.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Name an operation — naming","text":"","code":"naming(   start = NULL,   sets1,   middle = NULL,   sets2 = NULL,   collapse_symbol = \"union\" )"},{"path":"https://docs.ropensci.org/BaseSet/reference/naming.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Name an operation — naming","text":"start, middle Character used start symbol divide sets1 sets2. sets1, sets2 Character sets collapse_symbol Name symbol joins sets sets1 sets2.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/naming.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Name an operation — naming","text":"character vector combining sets","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/naming.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Name an operation — naming","text":"","code":"naming(sets1 = c(\"a\", \"b\")) #> [1] \"a∪b\" naming(sets1 = \"a\", middle = \"union\", sets2 = \"b\") #> [1] \"a∪b\" naming(sets1 = \"a\", middle = \"intersection\", sets2 = c(\"b\", \"c\")) #> [1] \"a∩(b∪c)\" naming(sets1 = \"a\", middle = \"intersection\", sets2 = c(\"b\", \"c\")) #> [1] \"a∩(b∪c)\" naming(     start = \"complement\", sets1 = \"a\", middle = \"intersection\",     sets2 = c(\"b\", \"c\"), collapse_symbol = \"intersection\" ) #> [1] \"∁a∩b∩c\""},{"path":"https://docs.ropensci.org/BaseSet/reference/power_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the power set — power_set","title":"Create the power set — power_set","text":"Create power set object: combinations elements sets.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/power_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the power set — power_set","text":"","code":"power_set(object, set, name, ...)"},{"path":"https://docs.ropensci.org/BaseSet/reference/power_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the power set — power_set","text":"object TidySet object. set name set used power set, provided used. name root name new set, provided standard notation \"P()\" used. ... arguments passed possible.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/power_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the power set — power_set","text":"TidySet object new set.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/power_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the power set — power_set","text":"","code":"relations <- data.frame(     sets = c(rep(\"a\", 5), \"b\"),     elements = letters[seq_len(6)] ) TS <- tidySet(relations) power_set(TS, \"a\", name = \"power_set\") #>    elements           sets fuzzy #> 1         a              a     1 #> 2         b              a     1 #> 3         c              a     1 #> 4         d              a     1 #> 5         e              a     1 #> 6         f              b     1 #> 7         a  power_set_1_1     1 #> 8         b  power_set_1_2     1 #> 9         c  power_set_1_3     1 #> 10        d  power_set_1_4     1 #> 11        e  power_set_1_5     1 #> 12        a  power_set_2_1     1 #> 13        b  power_set_2_1     1 #> 14        a  power_set_2_2     1 #> 15        c  power_set_2_2     1 #> 16        a  power_set_2_3     1 #> 17        d  power_set_2_3     1 #> 18        a  power_set_2_4     1 #> 19        e  power_set_2_4     1 #> 20        b  power_set_2_5     1 #> 21        c  power_set_2_5     1 #> 22        b  power_set_2_6     1 #> 23        d  power_set_2_6     1 #> 24        b  power_set_2_7     1 #> 25        e  power_set_2_7     1 #> 26        c  power_set_2_8     1 #> 27        d  power_set_2_8     1 #> 28        c  power_set_2_9     1 #> 29        e  power_set_2_9     1 #> 30        d power_set_2_10     1 #> 31        e power_set_2_10     1 #> 32        a  power_set_3_1     1 #> 33        b  power_set_3_1     1 #> 34        c  power_set_3_1     1 #> 35        a  power_set_3_2     1 #> 36        b  power_set_3_2     1 #> 37        d  power_set_3_2     1 #> 38        a  power_set_3_3     1 #> 39        b  power_set_3_3     1 #> 40        e  power_set_3_3     1 #> 41        a  power_set_3_4     1 #> 42        c  power_set_3_4     1 #> 43        d  power_set_3_4     1 #> 44        a  power_set_3_5     1 #> 45        c  power_set_3_5     1 #> 46        e  power_set_3_5     1 #> 47        a  power_set_3_6     1 #> 48        d  power_set_3_6     1 #> 49        e  power_set_3_6     1 #> 50        b  power_set_3_7     1 #> 51        c  power_set_3_7     1 #> 52        d  power_set_3_7     1 #> 53        b  power_set_3_8     1 #> 54        c  power_set_3_8     1 #> 55        e  power_set_3_8     1 #> 56        b  power_set_3_9     1 #> 57        d  power_set_3_9     1 #> 58        e  power_set_3_9     1 #> 59        c power_set_3_10     1 #> 60        d power_set_3_10     1 #> 61        e power_set_3_10     1 #> 62        a  power_set_4_1     1 #> 63        b  power_set_4_1     1 #> 64        c  power_set_4_1     1 #> 65        d  power_set_4_1     1 #> 66        a  power_set_4_2     1 #> 67        b  power_set_4_2     1 #> 68        c  power_set_4_2     1 #> 69        e  power_set_4_2     1 #> 70        a  power_set_4_3     1 #> 71        b  power_set_4_3     1 #> 72        d  power_set_4_3     1 #> 73        e  power_set_4_3     1 #> 74        a  power_set_4_4     1 #> 75        c  power_set_4_4     1 #> 76        d  power_set_4_4     1 #> 77        e  power_set_4_4     1 #> 78        b  power_set_4_5     1 #> 79        c  power_set_4_5     1 #> 80        d  power_set_4_5     1 #> 81        e  power_set_4_5     1"},{"path":"https://docs.ropensci.org/BaseSet/reference/pull_.html","id":null,"dir":"Reference","previous_headings":"","what":"Pull from a TidySet — pull.TidySet","title":"Pull from a TidySet — pull.TidySet","text":"Use pull extract columns TidySet object. can use activate filter use specific function. S3 method filters using information TidySet.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/pull_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pull from a TidySet — pull.TidySet","text":"","code":"# S3 method for class 'TidySet' pull(.data, var = -1, name = NULL, ...)  pull_set(.data, var = -1, name = NULL, ...)  pull_element(.data, var = -1, name = NULL, ...)  pull_relation(.data, var = -1, name = NULL, ...)"},{"path":"https://docs.ropensci.org/BaseSet/reference/pull_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pull from a TidySet — pull.TidySet","text":".data TidySet object var literal variable name, positive integer negative integer column position. name Column used name output. ... Currently used.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/pull_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pull from a TidySet — pull.TidySet","text":"TidySet object","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/pull_.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pull from a TidySet — pull.TidySet","text":"","code":"relations <- data.frame(     sets = c(rep(\"a\", 5), \"b\", rep(\"a2\", 5), \"b2\"),     elements = rep(letters[seq_len(6)], 2),     fuzzy = runif(12) ) a <- tidySet(relations) a <- mutate_element(a, type = c(rep(\"Gene\", 4), rep(\"lncRNA\", 2))) pull(a, type) #>  [1] \"Gene\"   \"Gene\"   \"Gene\"   \"Gene\"   \"lncRNA\" \"lncRNA\" \"Gene\"   \"Gene\"   #>  [9] \"Gene\"   \"Gene\"   \"lncRNA\" \"lncRNA\" # Equivalent to pull_relation b <- activate(a, \"relations\") pull_relation(b, elements) #>  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" pull_element(b, elements) #> [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" # Filter element pull_element(a, type) #> [1] \"Gene\"   \"Gene\"   \"Gene\"   \"Gene\"   \"lncRNA\" \"lncRNA\" # Filter sets pull_set(a, sets) #> [1] \"a\"  \"b\"  \"a2\" \"b2\""},{"path":"https://docs.ropensci.org/BaseSet/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr arrange, filter, group_by, mutate, pull, select","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/relations.html","id":null,"dir":"Reference","previous_headings":"","what":"Relations of the TidySet — relations","title":"Relations of the TidySet — relations","text":"Given TidySet retrieve relations substitute . TidySet() object","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/relations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relations of the TidySet — relations","text":"","code":"relations(object)  relations(object) <- value  # S4 method for class 'TidySet' relations(object)  replace_relations(object, value)  # S4 method for class 'TidySet' relations(object) <- value  # S4 method for class 'TidySet' nRelations(object)"},{"path":"https://docs.ropensci.org/BaseSet/reference/relations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relations of the TidySet — relations","text":"object Object coerced tested. value Modification relations.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/relations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relations of the TidySet — relations","text":"data.frame information relations elements sets.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/relations.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Relations of the TidySet — relations","text":"relations(TidySet): Retrieve relations relations(TidySet) <- value: Modify relations nRelations(TidySet): Return number unique relations","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/relations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Relations of the TidySet — relations","text":"","code":"TS <- tidySet(list(A = letters[1:2], B = letters[5:7])) relations(TS) #>   elements sets fuzzy #> 1        a    A     1 #> 2        b    A     1 #> 3        e    B     1 #> 4        f    B     1 #> 5        g    B     1"},{"path":"https://docs.ropensci.org/BaseSet/reference/remove_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove column — remove_column","title":"Remove column — remove_column","text":"Removes column slot TidySet object.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/remove_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove column — remove_column","text":"","code":"remove_column(object, slot, column_names)  # S4 method for class 'TidySet,character,character' remove_column(object, slot, column_names)"},{"path":"https://docs.ropensci.org/BaseSet/reference/remove_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove column — remove_column","text":"object TidySet object. slot TidySet slot. column_names name columns.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/remove_column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove column — remove_column","text":"TidySet object.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/remove_column.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Remove column — remove_column","text":"remove_column(object = TidySet, slot = character, column_names = character): Remove columns slot","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/remove_column.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove column — remove_column","text":"","code":"x <- data.frame(sets = c(rep(\"A\", 5), rep(\"B\", 5)),                 elements = c(letters[1:5], letters[3:7]),                 extra = sample(c(\"YES\", \"NO\"), 10, replace = TRUE)) TS <- tidySet(x) TS #>    elements sets extra fuzzy #> 1         a    A    NO     1 #> 2         b    A    NO     1 #> 3         c    A   YES     1 #> 4         d    A    NO     1 #> 5         e    A    NO     1 #> 6         c    B   YES     1 #> 7         d    B   YES     1 #> 8         e    B   YES     1 #> 9         f    B   YES     1 #> 10        g    B   YES     1 remove_column(TS, \"relations\", \"extra\") #>    elements sets fuzzy #> 1         a    A     1 #> 2         b    A     1 #> 3         c    A     1 #> 4         d    A     1 #> 5         e    A     1 #> 6         c    B     1 #> 7         d    B     1 #> 8         e    B     1 #> 9         f    B     1 #> 10        g    B     1"},{"path":"https://docs.ropensci.org/BaseSet/reference/remove_element.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove elements — remove_element","title":"Remove elements — remove_element","text":"Given TidySet remove elements related relations required also sets.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/remove_element.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove elements — remove_element","text":"","code":"remove_element(object, elements, ...)  # S4 method for class 'TidySet,characterORfactor' remove_element(object, elements)"},{"path":"https://docs.ropensci.org/BaseSet/reference/remove_element.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove elements — remove_element","text":"object TidySet object. elements elements removed. ... Placeholder arguments passed method. Currently used.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/remove_element.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove elements — remove_element","text":"TidySet object.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/remove_element.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Remove elements — remove_element","text":"remove_element(object = TidySet, elements = characterORfactor): Removes everything related element","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/remove_element.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove elements — remove_element","text":"","code":"relations <- data.frame(     sets = c(rep(\"A\", 5), \"B\"),     elements = letters[seq_len(6)],     fuzzy = runif(6) ) TS <- tidySet(relations) remove_element(TS, \"c\") #>   elements sets     fuzzy #> 1        a    A 0.2449280 #> 2        b    A 0.7811226 #> 3        d    A 0.8753579 #> 4        e    A 0.2957501 #> 5        f    B 0.9835254"},{"path":"https://docs.ropensci.org/BaseSet/reference/remove_relation.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a relation — remove_relation","title":"Remove a relation — remove_relation","text":"Given TidySet removes relations elements sets","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/remove_relation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a relation — remove_relation","text":"","code":"remove_relation(object, elements, sets, ...)  # S4 method for class 'TidySet,characterORfactor,characterORfactor' remove_relation(object, elements, sets)"},{"path":"https://docs.ropensci.org/BaseSet/reference/remove_relation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a relation — remove_relation","text":"object TidySet object elements elements sets. sets name new set. ... Placeholder arguments passed method. Currently used.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/remove_relation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove a relation — remove_relation","text":"TidySet object.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/remove_relation.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Remove a relation — remove_relation","text":"remove_relation(   object = TidySet,   elements = characterORfactor,   sets = characterORfactor ): Removes relation elements sets.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/remove_relation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove a relation — remove_relation","text":"","code":"relations <- data.frame(     sets = c(rep(\"A\", 5), \"B\"),     elements = letters[seq_len(6)],     fuzzy = runif(6) ) TS <- tidySet(relations) remove_relation(TS, \"A\", \"a\") #>   elements sets     fuzzy #> 1        a    A 0.5898376 #> 2        b    A 0.7591584 #> 3        c    A 0.8360753 #> 4        d    A 0.7628195 #> 5        e    A 0.4172699 #> 6        f    B 0.1380748"},{"path":"https://docs.ropensci.org/BaseSet/reference/remove_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove sets — remove_set","title":"Remove sets — remove_set","text":"Given TidySet remove sets related relations required also elements","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/remove_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove sets — remove_set","text":"","code":"remove_set(object, sets, ...)  # S4 method for class 'TidySet,characterORfactor' remove_set(object, sets)"},{"path":"https://docs.ropensci.org/BaseSet/reference/remove_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove sets — remove_set","text":"object TidySet object. sets sets removed. ... Placeholder arguments passed method. Currently used.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/remove_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove sets — remove_set","text":"TidySet object.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/remove_set.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Remove sets — remove_set","text":"remove_set(object = TidySet, sets = characterORfactor): Removes everything related set","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/remove_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove sets — remove_set","text":"","code":"relations <- data.frame(     sets = c(\"A\", \"A\", \"B\", \"B\", \"C\", \"C\"),     elements = letters[seq_len(6)],     fuzzy = runif(6) ) TS <- tidySet(relations) remove_set(TS, \"B\") #>   elements sets      fuzzy #> 1        a    A 0.08084496 #> 2        b    A 0.65598263 #> 3        e    C 0.32931716 #> 4        f    C 0.97947422"},{"path":"https://docs.ropensci.org/BaseSet/reference/rename_elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename elements — rename_elements","title":"Rename elements — rename_elements","text":"Change default names sets elements.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/rename_elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename elements — rename_elements","text":"","code":"rename_elements(object, old, new)  # S4 method for class 'TidySet' rename_elements(object, old, new)"},{"path":"https://docs.ropensci.org/BaseSet/reference/rename_elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename elements — rename_elements","text":"object TidySet object. old character vector renamed. new character vector new names.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/rename_elements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename elements — rename_elements","text":"TidySet object.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/rename_elements.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Rename elements — rename_elements","text":"rename_elements(TidySet): Rename elements","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/rename_elements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename elements — rename_elements","text":"","code":"x <- list(\"A\" = letters[1:5], \"B\" = letters[3:7]) TS <- tidySet(x) name_elements(TS) #> [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" TS2 <- rename_elements(TS, \"a\", \"first\") name_elements(TS2) #> [1] \"first\" \"b\"     \"c\"     \"d\"     \"e\"     \"f\"     \"g\""},{"path":"https://docs.ropensci.org/BaseSet/reference/rename_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename sets — rename_set","title":"Rename sets — rename_set","text":"Change default names sets elements.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/rename_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename sets — rename_set","text":"","code":"rename_set(object, old, new)  # S4 method for class 'TidySet' rename_set(object, old, new)"},{"path":"https://docs.ropensci.org/BaseSet/reference/rename_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename sets — rename_set","text":"object TidySet object. old character vector renamed. new character vector new names.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/rename_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename sets — rename_set","text":"TidySet object.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/rename_set.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Rename sets — rename_set","text":"rename_set(TidySet): Rename sets","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/rename_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename sets — rename_set","text":"","code":"x <- list(\"A\" = letters[1:5], \"B\" = letters[3:7]) TS <- tidySet(x) name_sets(TS) #> [1] \"A\" \"B\" TS2 <- rename_set(TS, \"A\", \"C\") name_sets(TS2) #> [1] \"C\" \"B\""},{"path":"https://docs.ropensci.org/BaseSet/reference/select_.html","id":null,"dir":"Reference","previous_headings":"","what":"select from a TidySet — select.TidySet","title":"select from a TidySet — select.TidySet","text":"Use select extract columns TidySet object. can use activate filter use specific function. S3 method filters using information TidySet.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/select_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"select from a TidySet — select.TidySet","text":"","code":"# S3 method for class 'TidySet' select(.data, ...)  select_set(.data, ...)  select_element(.data, ...)  select_relation(.data, ...)"},{"path":"https://docs.ropensci.org/BaseSet/reference/select_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"select from a TidySet — select.TidySet","text":".data TidySet object ... name columns want keep, remove rename.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/select_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"select from a TidySet — select.TidySet","text":"TidySet object","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/select_.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"select from a TidySet — select.TidySet","text":"","code":"relations <- data.frame(     sets = c(rep(\"a\", 5), \"b\", rep(\"a2\", 5), \"b2\"),     elements = rep(letters[seq_len(6)], 2),     fuzzy = runif(12) ) a <- tidySet(relations) a <- mutate_element(a,     type = c(rep(\"Gene\", 4), rep(\"lncRNA\", 2)) ) a <- mutate_set(a, Group = c(\"UFM\", \"UAB\", \"UPF\", \"MIT\")) b <- select(a, -type) elements(b) #>   elements #> 1        a #> 2        b #> 3        c #> 4        d #> 5        e #> 6        f b <- select_element(a, elements) elements(b) #>   elements #> 1        a #> 2        b #> 3        c #> 4        d #> 5        e #> 6        f # Select sets select_set(a, sets) #>    elements sets      fuzzy   type #> 1         a    a 0.71518613   Gene #> 2         b    a 0.87263030   Gene #> 3         c    a 0.98328375   Gene #> 4         d    a 0.21856299   Gene #> 5         e    a 0.66453006 lncRNA #> 6         f    b 0.38956404 lncRNA #> 7         a   a2 0.04606364   Gene #> 8         b   a2 0.61691456   Gene #> 9         c   a2 0.59847499   Gene #> 10        d   a2 0.40685363   Gene #> 11        e   a2 0.85832815 lncRNA #> 12        f   b2 0.51768118 lncRNA"},{"path":"https://docs.ropensci.org/BaseSet/reference/set_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the size of a set — set_size","title":"Calculates the size of a set — set_size","text":"Assuming fuzzy values probabilities, calculates probability different sizes given set.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/set_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the size of a set — set_size","text":"","code":"set_size(object, sets = NULL)  # S4 method for class 'TidySet' set_size(object, sets = NULL)"},{"path":"https://docs.ropensci.org/BaseSet/reference/set_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the size of a set — set_size","text":"object TidySet object. sets sets length calculated.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/set_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the size of a set — set_size","text":"list size set probability size.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/set_size.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Calculates the size of a set — set_size","text":"set_size(TidySet): Calculates size set using length_set()","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/set_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the size of a set — set_size","text":"","code":"relations <- data.frame(     sets = c(rep(\"A\", 5), \"B\", \"C\"),     elements = c(letters[seq_len(6)], letters[6]),     fuzzy = runif(7) ) a <- tidySet(relations) set_size(a) #>    sets size  probability #> 1     A    0 0.0003426333 #> 2     A    1 0.0209556642 #> 3     A    2 0.2353804439 #> 4     A    3 0.5097888990 #> 5     A    4 0.2297076037 #> 6     A    5 0.0038247559 #> 7     B    0 0.3220219053 #> 8     B    1 0.6779780947 #> 9     C    0 0.3348475387 #> 10    C    1 0.6651524613"},{"path":"https://docs.ropensci.org/BaseSet/reference/set_symbols.html","id":null,"dir":"Reference","previous_headings":"","what":"A subset of symbols related to sets — set_symbols","title":"A subset of symbols related to sets — set_symbols","text":"Name symbol operations related sets, including intersection union among others:","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/set_symbols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A subset of symbols related to sets — set_symbols","text":"","code":"set_symbols"},{"path":"https://docs.ropensci.org/BaseSet/reference/set_symbols.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A subset of symbols related to sets — set_symbols","text":"object class character length 16.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/set_symbols.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A subset of symbols related to sets — set_symbols","text":"https://www.fileformat.info/info/unicode/category/Sm/list.htm","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/set_symbols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A subset of symbols related to sets — set_symbols","text":"","code":"set_symbols #>    intersection           union      complement        negation   subsetOrEqual  #>             \"∩\"             \"∪\"             \"∁\"             \"¬\"             \"⊆\"  #> supersetOrEqual       notSubset     notSuperset         element      notElement  #>             \"⊇\"             \"⊄\"             \"⊅\"             \"∈\"             \"∉\"  #>           empty        contains    notContained           minus         product  #>             \"∅\"             \"∋\"             \"∌\"             \"∖\"             \"⨯\"  #>     conditional  #>             \"|\""},{"path":"https://docs.ropensci.org/BaseSet/reference/sets.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets of the TidySet — sets","title":"Sets of the TidySet — sets","text":"Given TidySet retrieve sets substitute .","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/sets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets of the TidySet — sets","text":"","code":"sets(object)  sets(object) <- value  # S4 method for class 'TidySet' sets(object)  # S4 method for class 'TidySet' sets(object) <- value  replace_sets(object, value)  # S4 method for class 'TidySet,missing' nSets(object)  # S4 method for class 'TidySet,logical' nSets(object, all)"},{"path":"https://docs.ropensci.org/BaseSet/reference/sets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets of the TidySet — sets","text":"object TidySet object. value Modification sets. logical value whether return sets present.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/sets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets of the TidySet — sets","text":"data.frame information sets.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/sets.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Sets of the TidySet — sets","text":"sets(TidySet): Retrieve sets information sets(TidySet) <- value: Modify sets information nSets(object = TidySet, = missing): Return number sets nSets(object = TidySet, = logical): Return number sets","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/sets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sets of the TidySet — sets","text":"","code":"TS <- tidySet(list(A = letters[1:5], B = letters[2:10])) sets(TS) #>   sets #> 1    A #> 2    B sets(TS) <- data.frame(sets = c(\"B\", \"A\")) TS2 <- replace_sets(TS, data.frame(sets = c(\"A\", \"B\", \"C\"))) sets(TS2) #>   sets #> 1    A #> 2    B #> 3    C nSets(TS) #> [1] 2 nSets(TS2) #> [1] 3"},{"path":"https://docs.ropensci.org/BaseSet/reference/show-TidySet-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Method to show the TidySet object — show,TidySet-method","title":"Method to show the TidySet object — show,TidySet-method","text":"Prints resulting table TidySet object. shown elements sets without relationship (empty sets). see use sets() elements().","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/show-TidySet-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method to show the TidySet object — show,TidySet-method","text":"","code":"# S4 method for class 'TidySet' show(object)"},{"path":"https://docs.ropensci.org/BaseSet/reference/show-TidySet-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method to show the TidySet object — show,TidySet-method","text":"object TidySet","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/show-TidySet-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Method to show the TidySet object — show,TidySet-method","text":"table information relationships.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/size.html","id":null,"dir":"Reference","previous_headings":"","what":"Size — size","title":"Size — size","text":"Calculate size elements sets, using fuzzy values probabilities. First must active either sets elements.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Size — size","text":"","code":"size(object, ...)"},{"path":"https://docs.ropensci.org/BaseSet/reference/size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Size — size","text":"object TidySet object. ... Character vector name elements sets want calculate size .","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Size — size","text":"size elements sets. active slot relations slot returns TidySet object warning.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Size — size","text":"","code":"rel <- data.frame(     sets = c(rep(\"A\", 5), \"B\", \"C\"),     elements = c(letters[seq_len(6)], letters[6]) ) TS <- tidySet(rel) TS <- activate(TS, \"elements\") size(TS) #>   elements size probability #> 1        a    1           1 #> 2        b    1           1 #> 3        c    1           1 #> 4        d    1           1 #> 5        e    1           1 #> 6        f    2           1 TS <- activate(TS, \"sets\") size(TS) #>   sets size probability #> 1    A    5           1 #> 2    B    1           1 #> 3    C    1           1 # With fuzzy sets relations <- data.frame(     sets = c(rep(\"A\", 5), \"B\", \"C\"),     elements = c(letters[seq_len(6)], letters[6]),     fuzzy = runif(7) ) TS <- tidySet(relations) TS <- activate(TS, \"elements\") size(TS) #>    elements size probability #> 1         a    0  0.24395891 #> 2         a    1  0.75604109 #> 3         b    0  0.45716285 #> 4         b    1  0.54283715 #> 5         c    0  0.76071190 #> 6         c    1  0.23928810 #> 7         d    0  0.49110643 #> 8         d    1  0.50889357 #> 9         e    0  0.58273563 #> 10        e    1  0.41726437 #> 11        f    0  0.09893038 #> 12        f    1  0.43750484 #> 13        f    2  0.46356478 TS <- activate(TS, \"sets\") size(TS) #>    sets size probability #> 1     A    0  0.02428035 #> 2     A    1  0.15425979 #> 3     A    2  0.33585381 #> 4     A    3  0.32492060 #> 5     A    4  0.13983218 #> 6     A    5  0.02085328 #> 7     B    0  0.27305115 #> 8     B    1  0.72694885 #> 9     C    0  0.36231445 #> 10    C    1  0.63768555"},{"path":"https://docs.ropensci.org/BaseSet/reference/subtract.html","id":null,"dir":"Reference","previous_headings":"","what":"Subtract — subtract","title":"Subtract — subtract","text":"Elements set present set. Equivalent setdiff().","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/subtract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subtract — subtract","text":"","code":"subtract(object, set_in, not_in, ...)  # S4 method for class 'TidySet,characterORfactor,characterORfactor' subtract(   object,   set_in,   not_in,   name = NULL,   keep = TRUE,   keep_relations = keep,   keep_elements = keep,   keep_sets = keep )"},{"path":"https://docs.ropensci.org/BaseSet/reference/subtract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subtract — subtract","text":"object TidySet object. set_in Name sets elements present. not_in Name sets elements present. ... Placeholder arguments passed method. Currently used. name Name new set. default adds \"C\". keep Logical value keep sets. keep_relations logical value wan keep old relations. keep_elements logical value wan keep old elements. keep_sets logical value wan keep old sets.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/subtract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subtract — subtract","text":"TidySet object.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/subtract.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Subtract — subtract","text":"subtract(   object = TidySet,   set_in = characterORfactor,   not_in = characterORfactor ): Elements present sets sets","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/subtract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subtract — subtract","text":"","code":"relations <- data.frame(     sets = c(\"A\", \"A\", \"B\", \"B\", \"C\", \"C\"),     elements = letters[seq_len(6)],     fuzzy = runif(6) ) TS <- tidySet(relations) subtract(TS, \"A\", \"B\") #>   elements sets      fuzzy #> 1        a    A 0.39640996 #> 2        b    A 0.95948261 #> 3        c    B 0.29865803 #> 4        d    B 0.05020117 #> 5        e    C 0.57618742 #> 6        f    C 0.21790581 #> 7        a  A∖B 0.39640996 #> 8        b  A∖B 0.95948261 subtract(TS, \"A\", \"B\", keep = FALSE) #>   elements sets     fuzzy #> 1        a  A∖B 0.3964100 #> 2        b  A∖B 0.9594826"},{"path":"https://docs.ropensci.org/BaseSet/reference/tidySet.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a TidySet object — tidySet.GeneSetCollection","title":"Create a TidySet object — tidySet.GeneSetCollection","text":"functions help create TidySet object data.frame, list, matrix, GO3AnnDbBimap. can create fuzzy standard sets.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/tidySet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a TidySet object — tidySet.GeneSetCollection","text":"","code":"# S3 method for class 'GeneSetCollection' tidySet(relations)  # S3 method for class 'GeneColorSet' tidySet(relations)  # S3 method for class 'GeneSet' tidySet(relations)  tidySet(relations)  # S3 method for class 'data.frame' tidySet(relations)  # S3 method for class 'list' tidySet(relations)  # S3 method for class 'matrix' tidySet(relations)  # S3 method for class 'Go3AnnDbBimap' tidySet(relations)  # S3 method for class 'TidySet' tidySet(relations)"},{"path":"https://docs.ropensci.org/BaseSet/reference/tidySet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a TidySet object — tidySet.GeneSetCollection","text":"relations object coerced TidySet.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/tidySet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a TidySet object — tidySet.GeneSetCollection","text":"TidySet object.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/tidySet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a TidySet object — tidySet.GeneSetCollection","text":"Elements sets without relation shown printed.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/tidySet.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Create a TidySet object — tidySet.GeneSetCollection","text":"tidySet(GeneSetCollection): Converts tidySet given GeneSetCollection tidySet(GeneColorSet): Converts tidySet given GeneColorSet tidySet(GeneSet): Converts tidySet given GeneSet tidySet(data.frame): Given relations data.frame tidySet(list): Convert TidySet list. tidySet(matrix): Convert incidence matrix TidySet tidySet(Go3AnnDbBimap): Convert Go3AnnDbBimap TidySet object. tidySet(TidySet): Convert TidySet TidySet object.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/tidySet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a TidySet object — tidySet.GeneSetCollection","text":"","code":"# Needs GSEABase package from Bioconductor if (requireNamespace(\"GSEABase\", quietly = TRUE)) {     library(\"GSEABase\")     gs <- GeneSet()     gs     tidySet(gs)     fl <- system.file(\"extdata\", \"Broad.xml\", package=\"GSEABase\")     gs2 <- getBroadSets(fl) # actually, a list of two gene sets     TS <- tidySet(gs2)     dim(TS)     sets(TS) } #> Loading required package: BiocGenerics #>  #> Attaching package: ‘BiocGenerics’ #> The following object is masked from ‘package:BaseSet’: #>  #>     union #> The following objects are masked from ‘package:stats’: #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from ‘package:base’: #>  #>     Filter, Find, Map, Position, Reduce, anyDuplicated, aperm, append, #>     as.data.frame, basename, cbind, colnames, dirname, do.call, #>     duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted, #>     lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin, #>     pmin.int, rank, rbind, rownames, sapply, saveRDS, setdiff, table, #>     tapply, union, unique, unsplit, which.max, which.min #> Loading required package: Biobase #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with #>     'browseVignettes()'. To cite Bioconductor, see #>     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #> Loading required package: annotate #> Loading required package: AnnotationDbi #> Loading required package: stats4 #> Loading required package: IRanges #> Loading required package: S4Vectors #>  #> Attaching package: ‘S4Vectors’ #> The following object is masked from ‘package:BaseSet’: #>  #>     active #> The following object is masked from ‘package:utils’: #>  #>     findMatches #> The following objects are masked from ‘package:base’: #>  #>     I, expand.grid, unname #>  #> Attaching package: ‘AnnotationDbi’ #> The following object is masked from ‘package:BaseSet’: #>  #>     select #> Loading required package: XML #> Loading required package: graph #>  #> Attaching package: ‘graph’ #> The following object is masked from ‘package:XML’: #>  #>     addNode #> The following objects are masked from ‘package:BaseSet’: #>  #>     complement, intersection #>  #> Attaching package: ‘GSEABase’ #> The following object is masked from ‘package:BaseSet’: #>  #>     incidence #>       sets Identifier                    shortDescripton #> 1  chr5q23     c1:101  Genes in cytogenetic band chr5q23 #> 2 chr16q24     c1:102 Genes in cytogenetic band chr16q24 #>                      longDescription organism #> 1  Genes in cytogenetic band chr5q23    Human #> 2 Genes in cytogenetic band chr16q24    Human #>                                                   urls.getBroadSet #> 1 file://home/runner/work/_temp/Library/GSEABase/extdata/Broad.xml #> 2 file://home/runner/work/_temp/Library/GSEABase/extdata/Broad.xml #>                                                    urls2     contributor  type #> 1 http://www.broad.mit.edu/gsea/msigdb/cards/chr5q23.xml Broad Institute Broad #> 2 http://genome.ucsc.edu/cgi-bin/hgTracks?position=16q24 Broad Institute Broad #>                                                   urls3 #> 1 http://genome.ucsc.edu/cgi-bin/hgTracks?position=5q23 #> 2                                                  <NA> relations <- data.frame(     sets = c(rep(\"a\", 5), \"b\"),     elements = letters[seq_len(6)] ) tidySet(relations) #>   elements sets fuzzy #> 1        a    a     1 #> 2        b    a     1 #> 3        c    a     1 #> 4        d    a     1 #> 5        e    a     1 #> 6        f    b     1 relations2 <- data.frame(     sets = c(rep(\"A\", 5), \"B\"),     elements = letters[seq_len(6)],     fuzzy = runif(6) ) tidySet(relations2) #>   elements sets     fuzzy #> 1        a    A 0.1258563 #> 2        b    A 0.9381527 #> 3        c    A 0.8012751 #> 4        d    A 0.7580536 #> 5        e    A 0.5325652 #> 6        f    B 0.5468048 # A x <- list(\"A\" = letters[1:5], \"B\" = LETTERS[3:7]) tidySet(x) #>    elements sets fuzzy #> 1         a    A     1 #> 2         b    A     1 #> 3         c    A     1 #> 4         d    A     1 #> 5         e    A     1 #> 6         C    B     1 #> 7         D    B     1 #> 8         E    B     1 #> 9         F    B     1 #> 10        G    B     1 # A fuzzy set taken encoded as a list A <- runif(5) names(A) <- letters[1:5] B <- runif(5) names(B) <- letters[3:7] relations <- list(A, B) tidySet(relations) #>    elements sets     fuzzy #> 1         a Set2 0.0959265 #> 2         b Set2 0.3883498 #> 3         c Set2 0.1723519 #> 4         d Set2 0.6907258 #> 5         e Set2 0.6752085 #> 6         c <NA> 0.9462948 #> 7         d <NA> 0.1962195 #> 8         e <NA> 0.9686375 #> 9         f <NA> 0.3870963 #> 10        g <NA> 0.6503439 # Will error # x <- list(\"A\" = letters[1:5], \"B\" = LETTERS[3:7], \"c\" = runif(5)) # a <- tidySet(x) # Only characters or factors are allowed as elements. M <- matrix(c(1, 0.5, 1, 0), ncol = 2,             dimnames = list(c(\"A\", \"B\"), c(\"a\", \"b\"))) tidySet(M) #>   elements sets fuzzy #> 1        A    a   1.0 #> 2        B    a   0.5 #> 3        A    b   1.0"},{"path":"https://docs.ropensci.org/BaseSet/reference/union.html","id":null,"dir":"Reference","previous_headings":"","what":"Join sets — union","title":"Join sets — union","text":"Given TidySet merges several sets new one using logic defined FUN.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/union.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join sets — union","text":"","code":"union(object, ...)  # S3 method for class 'TidySet' union(   object,   sets,   name = NULL,   FUN = \"max\",   keep = FALSE,   keep_relations = keep,   keep_elements = keep,   keep_sets = keep,   ... )"},{"path":"https://docs.ropensci.org/BaseSet/reference/union.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join sets — union","text":"object TidySet object. ... named arguments passed FUN. sets name sets used. name name new set. defaults joins sets ∩. FUN function applied performing union. standard union \"max\" function, can provide function given numeric vector returns single number. keep logical value want keep. keep_relations logical value wan keep old relations. keep_elements logical value wan keep old elements. keep_sets logical value wan keep old sets.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/union.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join sets — union","text":"TidySet object.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/union.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Join sets — union","text":"default uses max function following standard fuzzy definition, can changed. See examples .","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/reference/union.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Join sets — union","text":"","code":"# Classical set rel <- data.frame(     sets = c(rep(\"A\", 5), \"B\", \"B\"),     elements = c(letters[seq_len(6)], \"a\") ) TS <- tidySet(rel) union(TS, c(\"B\", \"A\")) #> Error in as.vector(x): no method for coercing this S4 class to a vector # Fuzzy set rel <- data.frame(     sets = c(rep(\"A\", 5), \"B\", \"B\"),     elements = c(letters[seq_len(6)], \"a\"),     fuzzy = runif(7) ) TS2 <- tidySet(rel) # Standard default logic union(TS2, c(\"B\", \"A\"), \"C\") #> Error in base::union(x, y, ...): unused argument (\"C\") # Probability logic union(TS2, c(\"B\", \"A\"), \"C\", FUN = union_probability) #> Error in base::union(x, y, ...): unused arguments (\"C\", FUN = function (p)  #> { #>     l <- length(p) #>     if (l == 1) { #>         return(p) #>     } #>     n <- vapply(seq_len(l)[-1], function(x) { #>         sum(combn(seq_along(p), x, FUN = independent_probabilities, p = p)) #>     }, numeric(1)) #>     sum(p) + sum(rep(c(-1, 1), length.out = length(n)) * n) #> })"},{"path":"https://docs.ropensci.org/BaseSet/reference/union_closed.html","id":null,"dir":"Reference","previous_headings":"","what":"Union closed sets — union_closed","title":"Union closed sets — union_closed","text":"Tests given object union-closed.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/union_closed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Union closed sets — union_closed","text":"","code":"union_closed(object, ...)  # S3 method for class 'TidySet' union_closed(object, sets = NULL, ...)"},{"path":"https://docs.ropensci.org/BaseSet/reference/union_closed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Union closed sets — union_closed","text":"object TidySet object. ... named arguments passed FUN. sets name sets used.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/union_closed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Union closed sets — union_closed","text":"logical value: TRUE combinations sets produce already existing sets, FALSE otherwise.","code":""},{"path":"https://docs.ropensci.org/BaseSet/reference/union_closed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Union closed sets — union_closed","text":"","code":"l <- list(A = \"1\",      B = c(\"1\", \"2\"),      C = c(\"2\", \"3\", \"4\"),      D = c(\"1\", \"2\", \"3\", \"4\") ) TS <- tidySet(l) union_closed(TS) #> [1] TRUE union_closed(TS, sets = c(\"A\", \"B\", \"C\")) #> [1] FALSE union_closed(TS, sets = c(\"A\", \"B\", \"C\", \"D\")) #> [1] TRUE"},{"path":"https://docs.ropensci.org/BaseSet/news/index.html","id":"baseset-100","dir":"Changelog","previous_headings":"","what":"BaseSet 1.0.0","title":"BaseSet 1.0.0","text":"Now possible list sets elements present relations might object via factors: name_sets(), name_elements(), nElements() nSets() gain argument. Fix problem $<- length match slot name didn’t. Now possible use sets elements subset TidySet (relations). New dimnames() names() functions discover names data slots. Minor changes getGAF() improve speed. Increase R version dependency 4.1 remove magrittr dependency.","code":""},{"path":"https://docs.ropensci.org/BaseSet/news/index.html","id":"baseset-090","dir":"Changelog","previous_headings":"","what":"BaseSet 0.9.0","title":"BaseSet 0.9.0","text":"CRAN release: 2023-08-22 tidy() now defaults tidySet(). New function union_closed(). Make robust code unwanted dimensions drops. power_set() returns also sets size 1 better names default. indicates rows, j either “relations”, “sets” “elements” k columns slot. Completion $ works. length() returns number sets (complete ncol nrow). lengths() returns number relations set.","code":""},{"path":"https://docs.ropensci.org/BaseSet/news/index.html","id":"baseset-0017","dir":"Changelog","previous_headings":"","what":"BaseSet 0.0.17","title":"BaseSet 0.0.17","text":"CRAN release: 2021-07-05 Fixing test missing package. Adding copyright holder.","code":""},{"path":"https://docs.ropensci.org/BaseSet/news/index.html","id":"baseset-0016","dir":"Changelog","previous_headings":"","what":"BaseSet 0.0.16","title":"BaseSet 0.0.16","text":"CRAN release: 2021-04-22 Update Code Conduct rOpenSci template Fix NOTE LazyData","code":""},{"path":"https://docs.ropensci.org/BaseSet/news/index.html","id":"baseset-0015","dir":"Changelog","previous_headings":"","what":"BaseSet 0.0.15","title":"BaseSet 0.0.15","text":"CRAN release: 2021-03-20 Upgrade R version requirements Fix links Make sure vignettes run Bioconductor packages available","code":""},{"path":"https://docs.ropensci.org/BaseSet/news/index.html","id":"baseset-0014","dir":"Changelog","previous_headings":"","what":"BaseSet 0.0.14","title":"BaseSet 0.0.14","text":"CRAN release: 2020-11-11 Remove unused dependency BiocStyle Fix unicode characters windows","code":""},{"path":[]},{"path":"https://docs.ropensci.org/BaseSet/news/index.html","id":"baseset-0009000","dir":"Changelog","previous_headings":"","what":"BaseSet 0.0.0.9000","title":"BaseSet 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
